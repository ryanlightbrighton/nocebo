__EXEC (NOCEBO_MISSION_ROOT = __FILE__ select [0, count __FILE__ - 15])
respawn = 3;
respawnDelay = 7;
respawnTemplates[] = {"horde_respawn"};
respawnDialog = 0;
respawnOnStart = 0;
respawnButton = 0;
onLoadIntro = "On Load Intro Message";
loadScreen =  "nocebo\images\raven4.paa";
author = "Das Attorney";
onLoadName = "Nocebo";
onLoadMission = "Plunder the treasure!";
class Header {
	gameType = coop;
	minPlayers = 1;
	maxPlayers = 13;
};
briefing = 0;
disabledAI = 1;
scriptedPlayer = 1;
enableItemsDropping = 0;
enableDebugConsole = 1;
allowFunctionsRecompile = 1;
forceRotorLibSimulation = 0;
allowFunctionsLog = 1;
joinUnassigned = 0;
corpseManagerMode = 0;

#include "client\gui\hpp\defines.hpp"
#include "client\gui\hpp\artyMenu.hpp"
#include "client\gui\hpp\casMenu.hpp"
#include "client\gui\hpp\casRemCtrlMenu.hpp"
#include "client\gui\hpp\fuseSetting.hpp"
#include "client\gui\hpp\interactionMenu_general.hpp"
#include "client\gui\hpp\interactionMenu_refit.hpp"
#include "client\gui\hpp\interactionMenu_repair.hpp"
#include "client\gui\hpp\progressMenu.hpp"
#include "client\gui\hpp\respawnMenu.hpp"
#include "client\inventory\radio\dynamicGroups.hpp"
#include "misc\reloadMenu.hpp"

/*class CfgTaskTypes {
	class AirBase {
		icon = \A3\UI_F_MP_Mark\Data\Tasks\Types\Attack_ca.paa;
		icon3D = \A3\UI_F_MP_Mark\Data\Tasks\Types3D\Attack_ca.paa;
	};
	class Defend {
		icon = \A3\UI_F_MP_Mark\Data\Tasks\Types\Defend_ca.paa;
		icon3D = \A3\UI_F_MP_Mark\Data\Tasks\Types3D\Defend_ca.paa;
	};
};*/

class CfgDebriefing {
	class savedPlayerStats {
		title = "Saved status";
		subtitle = "LOGGED OFF";
		description = "You will respawn at this location again when you log back in on this server.  Your equipment is saved, but tents and vehicles are only saved at server shutdown.";
		pictureBackground = "";
		picture = "\a3\ui_f\data\gui\cfg\Hints\tasks_ca.paa";
		pictureColor[] = {1,1,1,1};
	};
	class serverShutDown {
		title = "Saved status";
		subtitle = "SERVER SHUTDOWN";
		description = "The server is shutting down and saving persistent data.  You will respawn at this location again when you log back in on this server.  If you were in a vehicle, it will be parked close to it's last location and you will respawn near it.  Your equipment and stats are saved.";
		pictureBackground = "";
		picture = "\a3\ui_f\data\gui\cfg\Hints\tasks_ca.paa";
		pictureColor[] = {1,1,1,1};
	};
	class filePatching {
		title = "Bad server setup";
		subtitle = "FILE PATCHING";
		description = "The server owner must disable file patching in order to run Nocebo.";
		pictureBackground = "";
		picture = "\a3\ui_f\data\gui\cfg\debriefing\endDefault_ca.paa";
		pictureColor[] = {1,1,1,1};
	};
	class noIniDbi {
		title = "Bad server setup";
		subtitle = "INIDBI";
		description = "The server owner must load iniDbi2 in order to run Nocebo.";
		pictureBackground = "";
		picture = "\a3\ui_f\data\gui\cfg\debriefing\endDefault_ca.paa";
		pictureColor[] = {1,1,1,1};
	};
	class badVersion {
		title = "Bad product version";
		subtitle = "ARMA 3";
		description = "You must update your game in order to run Nocebo.";
		pictureBackground = "";
		picture = "\a3\ui_f\data\gui\cfg\debriefing\endDefault_ca.paa";
		pictureColor[] = {1,1,1,1};
	};
	class arkDestroyed {
		title = "Ark destroyed";
		subtitle = "ARK DESTROYED";
		description = "The ark has been destroyed.";
		pictureBackground = "";
		picture = "\a3\ui_f\data\gui\cfg\debriefing\endDefault_ca.paa";
		pictureColor[] = {1,1,1,1};
	};
	class arkRecovered {
		title = "Ark recovered";
		subtitle = "ARK RECOVERED";
		description = "The ark has been recovered.";
		pictureBackground = "";
		picture = "\a3\ui_f\data\gui\cfg\debriefing\endDefault_ca.paa";
		pictureColor[] = {1,1,1,1};
	};
};

class CfgRespawnTemplates {
	class horde_respawn {
		onPlayerKilled = "client\respawn\system\playerKilled.sqf";
		onPlayerRespawn = horde_fnc_handleRespawn;
		respawnDelay = 5;
		respawnOnStart = 0;
	};
};

class CfgLeaflets {
	class West {
		// Configuration for 1Rnd_Leaflets_West_F
		text = "What a guy!";
		texture = "\nocebo\images\jolly_roger.paa";
	}
};

// test to clean up displays etc (doesn't work)

// __EXEC(16700 cutText ["","PLAIN"]);

// MustReturn = __EVAL(diag_log format ["time evaluated xx: %1", diag_ticktime]);

class Params {
	// debug
	class BaseClass {
		title = "---------------------------- DEBUG ----------------------------";
		values[] = {0};
		texts[] = {""};
		default = 0;
		paramMultiplier = 1;
		paramReplace = "";
		publicClass = 1;
	};
	class spacer_01 : BaseClass {
		title = "";
	};
	class ncb_param_debugMode : BaseClass {
		title = "Debug mode";
		values[] = {0,1};
		texts[] = {"False","True"};
		default = profileNamespace getVariable ["ncb_param_debugMode",0];
	};
	class ncb_param_invincible : BaseClass {
		title = "Player is bulletproof";
		values[] = {0,1};
		texts[] = {"False","True"};
		default = profileNamespace getVariable ["ncb_param_invincible",0];
	};
	class ncb_param_loadZonesFromProfile : BaseClass {
		title = "Save/load zones from server profile";
		values[] = {0,1};
		texts[] = {"Create zone static database (must be ran when changing building values)","Load zone config"};
		default = profileNamespace getVariable ["ncb_param_loadZonesFromProfile",1];
		publicClass = 0;
	};
	class ncb_param_loadSavedGame : BaseClass {
		title = "Start new game / Load existing game";
		values[] = {0,1};
		texts[] = {"Start new game","Load existing game"};
		default = profileNamespace getVariable ["ncb_param_loadSavedGame",1];
		publicClass = 0;
	};
	// weather
	class spacer_1a : spacer_01 {};
	class spacer_1b : spacer_01 {
		title = "--------------- PLAYER OPTIONS ---------------";
	};
	class spacer_1c : spacer_01 {};
	class ncb_param_playerRecoilCoef : BaseClass {
		title = "Player recoil coefficient";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200};
		texts[] = {"No recoil","0.01","0.02","0.03","0.04","0.05","0.06","0.07","0.08","0.09","0.10","0.11","0.12","0.13","0.14","0.15","0.16","0.17","0.18","0.19","0.20","0.21","0.22","0.23","0.24","0.25","0.26","0.27","0.28","0.29","0.30","0.31","0.32","0.33","0.34","0.35","0.36","0.37","0.38","0.39","0.40","0.41","0.42","0.43","0.44","0.45","0.46","0.47","0.48","0.49","0.50","0.51","0.52","0.53","0.54","0.55","0.56","0.57","0.58","0.59","0.60","0.61","0.62","0.63","0.64","0.65","0.66","0.67","0.68","0.69","0.70","0.71","0.72","0.73","0.74","0.75","0.76","0.77","0.78","0.79","0.80","0.81","0.82","0.83","0.84","0.85","0.86","0.87","0.88","0.89","0.90","0.91","0.92","0.93","0.94","0.95","0.96","0.97","0.98","0.99","1","1.01","1.02","1.03","1.04","1.05","1.06","1.07","1.08","1.09","1.10","1.11","1.12","1.13","1.14","1.15","1.16","1.17","1.18","1.19","1.20","1.21","1.22","1.23","1.24","1.25","1.26","1.27","1.28","1.29","1.30","1.31","1.32","1.33","1.34","1.35","1.36","1.37","1.38","1.39","1.40","1.41","1.42","1.43","1.44","1.45","1.46","1.47","1.48","1.49","1.50","1.51","1.52","1.53","1.54","1.55","1.56","1.57","1.58","1.59","1.60","1.61","1.62","1.63","1.64","1.65","1.66","1.67","1.68","1.69","1.70","1.71","1.72","1.73","1.74","1.75","1.76","1.77","1.78","1.79","1.80","1.81","1.82","1.83","1.84","1.85","1.86","1.87","1.88","1.89","1.90","1.91","1.92","1.93","1.94","1.95","1.96","1.97","1.98","1.99","2"};
		default = profileNamespace getVariable ["ncb_param_playerRecoilCoef",100];
		paramMultiplier = 0.01;
	};
	class ncb_param_playerAimingSwayCoef : BaseClass {
		title = "Player aiming sway coefficient";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200};
		texts[] = {"No sway","0.01","0.02","0.03","0.04","0.05","0.06","0.07","0.08","0.09","0.10","0.11","0.12","0.13","0.14","0.15","0.16","0.17","0.18","0.19","0.20","0.21","0.22","0.23","0.24","0.25","0.26","0.27","0.28","0.29","0.30","0.31","0.32","0.33","0.34","0.35","0.36","0.37","0.38","0.39","0.40","0.41","0.42","0.43","0.44","0.45","0.46","0.47","0.48","0.49","0.50","0.51","0.52","0.53","0.54","0.55","0.56","0.57","0.58","0.59","0.60","0.61","0.62","0.63","0.64","0.65","0.66","0.67","0.68","0.69","0.70","0.71","0.72","0.73","0.74","0.75","0.76","0.77","0.78","0.79","0.80","0.81","0.82","0.83","0.84","0.85","0.86","0.87","0.88","0.89","0.90","0.91","0.92","0.93","0.94","0.95","0.96","0.97","0.98","0.99","1","1.01","1.02","1.03","1.04","1.05","1.06","1.07","1.08","1.09","1.10","1.11","1.12","1.13","1.14","1.15","1.16","1.17","1.18","1.19","1.20","1.21","1.22","1.23","1.24","1.25","1.26","1.27","1.28","1.29","1.30","1.31","1.32","1.33","1.34","1.35","1.36","1.37","1.38","1.39","1.40","1.41","1.42","1.43","1.44","1.45","1.46","1.47","1.48","1.49","1.50","1.51","1.52","1.53","1.54","1.55","1.56","1.57","1.58","1.59","1.60","1.61","1.62","1.63","1.64","1.65","1.66","1.67","1.68","1.69","1.70","1.71","1.72","1.73","1.74","1.75","1.76","1.77","1.78","1.79","1.80","1.81","1.82","1.83","1.84","1.85","1.86","1.87","1.88","1.89","1.90","1.91","1.92","1.93","1.94","1.95","1.96","1.97","1.98","1.99","2"};
		default = profileNamespace getVariable ["ncb_param_playerAimingSwayCoef",100];
		paramMultiplier = 0.01;
	};
	class ncb_param_playerStaminaEnabled : BaseClass {
		title = "Enable/disable stamina system";
		values[] = {0,1};
		texts[] = {"Disabled","Enabled"};
		default = profileNamespace getVariable ["ncb_param_playerStaminaEnabled",1];
	};
	class ncb_param_playerStartMap : BaseClass {
		title = "Allow players to start with map";
		values[] = {0,1};
		texts[] = {"No","Yes"};
		default = profileNamespace getVariable ["ncb_param_playerStartMap",1];
	};
	class ncb_param_playerStartNVG : BaseClass {
		title = "Allow players to start with NVG";
		values[] = {0,1};
		texts[] = {"No","Yes"};
		default = profileNamespace getVariable ["ncb_param_playerStartNVG",1];
	};
	class ncb_param_playerStartRadio : BaseClass {
		title = "Allow players to start with radio";
		values[] = {0,1};
		texts[] = {"No","Yes"};
		default = profileNamespace getVariable ["ncb_param_playerStartRadio",1];
	};
	//class ncb_param_playerStartWrench : BaseClass {
	//	title = "Allow players to start with wrench";
	//	values[] = {0,1};
	//	texts[] = {"No","Yes"};
	//	default = profileNamespace getVariable ["ncb_param_playerStartWrench",1];
	//};
	class ncb_param_playerStartPrimaryWeapon : BaseClass {
		title = "Allow players to start with primary weapon";
		values[] = {0,1};
		texts[] = {"No","Yes"};
		default = profileNamespace getVariable ["ncb_param_playerStartPrimaryWeapon",1];
		paramReplace = "[false,true]";
	};
	class ncb_param_playerStartHandgunWeapon : BaseClass {
		title = "Allow players to start with pistol";
		values[] = {0,1};
		texts[] = {"No","Yes"};
		default = profileNamespace getVariable ["ncb_param_playerStartHandgunWeapon",1];
		paramReplace = "[false,true]";
	};
	class ncb_param_enableChannelGlobalChat : BaseClass {
		title = "Enable/disable global chat channel (Admin always has access to GC)";
		values[] = {0,1};
		texts[] = {"Disabled","Enabled"};
		default = profileNamespace getVariable ["ncb_param_enableChannelGlobalChat",1];
		paramReplace = "[false,true]";
	};
	class ncb_param_enableChannelGlobalRadio : BaseClass {
		title = "Enable/disable global radio channel (Admin always has access to GC)";
		values[] = {0,1};
		texts[] = {"Disabled","Enabled"};
		default = profileNamespace getVariable ["ncb_param_enableChannelGlobalRadio",1];
		paramReplace = "[false,true]";
	};
	class ncb_param_enableChannelSideChat : BaseClass {
		title = "Enable/disable side chat channel";
		values[] = {0,1};
		texts[] = {"Disabled","Enabled"};
		default = profileNamespace getVariable ["ncb_param_enableChannelSideChat",1];
		paramReplace = "[false,true]";
	};
	class ncb_param_enableChannelSideRadio : BaseClass {
		title = "Enable/disable side radio channel";
		values[] = {0,1};
		texts[] = {"Disabled","Enabled"};
		default = profileNamespace getVariable ["ncb_param_enableChannelSideRadio",1];
		paramReplace = "[false,true]";
	};
	class ncb_param_enableChannelCommandChat : BaseClass {
		title = "Enable/disable Command chat channel";
		values[] = {0,1};
		texts[] = {"Disabled","Enabled"};
		default = profileNamespace getVariable ["ncb_param_enableChannelCommandChat",1];
		paramReplace = "[false,true]";
	};
	class ncb_param_enableChannelCommandRadio : BaseClass {
		title = "Enable/disable command radio channel";
		values[] = {0,1};
		texts[] = {"Disabled","Enabled"};
		default = profileNamespace getVariable ["ncb_param_enableChannelCommandRadio",1];
		paramReplace = "[false,true]";
	};
	class ncb_param_enableChannelGroupChat : BaseClass {
		title = "Enable/disable Group chat channel";
		values[] = {0,1};
		texts[] = {"Disabled","Enabled"};
		default = profileNamespace getVariable ["ncb_param_enableChannelGroupChat",1];
		paramReplace = "[false,true]";
	};
	class ncb_param_enableChannelGroupRadio : BaseClass {
		title = "Enable/disable Group radio channel";
		values[] = {0,1};
		texts[] = {"Disabled","Enabled"};
		default = profileNamespace getVariable ["ncb_param_enableChannelGroupRadio",1];
		paramReplace = "[false,true]";
	};
	class ncb_param_enableChannelVehicleChat : BaseClass {
		title = "Enable/disable Vehicle chat channel";
		values[] = {0,1};
		texts[] = {"Disabled","Enabled"};
		default = profileNamespace getVariable ["ncb_param_enableChannelVehicleChat",1];
		paramReplace = "[false,true]";
	};
	class ncb_param_enableChannelVehicleRadio : BaseClass {
		title = "Enable/disable Vehicle radio channel";
		values[] = {0,1};
		texts[] = {"Disabled","Enabled"};
		default = profileNamespace getVariable ["ncb_param_enableChannelVehicleRadio",1];
		paramReplace = "[false,true]";
	};
	class ncb_param_enableChannelDirectChat : BaseClass {
		title = "Enable/disable Direct chat channel";
		values[] = {0,1};
		texts[] = {"Disabled","Enabled"};
		default = profileNamespace getVariable ["ncb_param_enableChannelDirectChat",1];
		paramReplace = "[false,true]";
	};
	class ncb_param_enableChannelDirectRadio : BaseClass {
		title = "Enable/disable Direct radio channel";
		values[] = {0,1};
		texts[] = {"Disabled","Enabled"};
		default = profileNamespace getVariable ["ncb_param_enableChannelDirectRadio",1];
		paramReplace = "[false,true]";
	};
	class ncb_param_playerDamageCoefSourceAI : BaseClass {
		title = "Damage coefficient for wounds caused by AI";
		values[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20};
		texts[] = {"10% damage","20% damage","30% damage","40% damage","50% damage","60% damage","70% damage","80% damage","90% damage","100% damage","110% damage","120% damage","130% damage","140% damage","150% damage","160% damage","170% damage","180% damage","190% damage","200% damage"};
		default = profileNamespace getVariable ["ncb_param_playerDamageCoefSourceAI",3];
		paramMultiplier = 0.1;
	};
	class ncb_param_playerDamageCoefSourcePlayer : BaseClass {
		title = "Damage coefficient for wounds caused by other players";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20};
		texts[] = {"No damage","10% damage","20% damage","30% damage","40% damage","50% damage","60% damage","70% damage","80% damage","90% damage","100% damage","110% damage","120% damage","130% damage","140% damage","150% damage","160% damage","170% damage","180% damage","190% damage","200% damage"};
		default = profileNamespace getVariable ["ncb_param_playerDamageCoefSourcePlayer",10];
		paramMultiplier = 0.1;
	};
	class ncb_param_bleedoutTimer : BaseClass {
		title = "Revive bleedout timer";
		values[] = {60,120,180,240,300,360,420,480,540,600};
		texts[] = {"1 min","2 mins","3 mins","4 mins","5 mins","6 mins","7 mins","8 mins","9 mins","10 mins"};
		default = profileNamespace getVariable ["ncb_param_bleedoutTimer",300];
	};
	class ncb_param_enableEngineArtillery : BaseClass {
		title = "Disable/Enable Artillery targetting computer";
		values[] = {0,1};
		texts[] = {"Disabled","Enabled"};
		default = profileNamespace getVariable ["ncb_param_enableEngineArtillery",0];
		paramReplace = "[false,true]";
	};
	class spacer_2axx : spacer_01 {};
	class spacer_2bxxx : spacer_01 {
		title = "--------------- PLAYER UI OPTIONS ---------------";
	};
	class spacer_2axxc : spacer_01 {};
	class ncb_param_showActionMenu : BaseClass {
		title = "Show action menu";
		values[] = {0,1};
		texts[] = {"Disabled","Enabled"};
		default = profileNamespace getVariable ["ncb_param_showActionMenu",1];
		paramReplace = "[false,true]";
	};
	class ncb_param_showVehUnitAndWeaponInfo : ncb_param_showActionMenu {
		title = "Show vehicle, soldier and weapon info";
		default = profileNamespace getVariable ["ncb_param_showVehUnitAndWeaponInfo",0];
	};
	class ncb_param_showVehRadar : ncb_param_showActionMenu {
		title = "Show vehicle radar";
		default = profileNamespace getVariable ["ncb_param_showVehRadar",0];
	};
	class ncb_param_showVehCompass : ncb_param_showActionMenu {
		title = "Show vehicle compass";
		default = profileNamespace getVariable ["ncb_param_showVehCompass",0];
	};
	class ncb_param_showTankDirIndicator : ncb_param_showActionMenu {
		title = "Show tank direction indicator";
		default = profileNamespace getVariable ["ncb_param_showTankDirIndicator",0];
	};
	class ncb_param_showGroupInfoBar : ncb_param_showActionMenu {
		title = "Show group info bar";
		default = profileNamespace getVariable ["ncb_param_showGroupInfoBar",0];
	};
	class ncb_param_showWeaponCursors : ncb_param_showActionMenu {
		title = "Show weapon cursors";
		default = profileNamespace getVariable ["ncb_param_showWeaponCursors",0];
	};
	class ncb_param_showVehiclePanels : ncb_param_showActionMenu {
		title = "Show vehicle panels";
		default = profileNamespace getVariable ["ncb_param_showVehiclePanels",0];
	};
	class ncb_param_personalWaypoint : ncb_param_showActionMenu {
		title = "Enable personal waypoint";
		default = profileNamespace getVariable ["ncb_param_personalWaypoint",0];
	};
	class ncb_param_mapMarkers : ncb_param_showActionMenu {
		title = "Enable map markers (tents and beacons)";
		default = profileNamespace getVariable ["ncb_param_mapMarkers",0];
	};
	class spacer_2a : spacer_01 {};
	class spacer_2b : spacer_01 {
		title = "--------------- WEATHER/TIME/ENVIRONMENT OPTIONS ---------------";
	};
	class spacer_2c : spacer_01 {};
	class ncb_param_weatherSystemSelect : BaseClass {
		title = "Choose weather system";
		values[] = {0,1};
		texts[] = {"Default BIS weather","Nocebo weather (broken)"};
		default = profileNamespace getVariable ["ncb_param_weatherSystemSelect",0];
		// paramReplace = "[false,true]";
	};
	class ncb_param_realTime : BaseClass {
		title = "In-game time and date";
		values[] = {0,1};
		texts[] = {"Choose start date & time ratios","Time and date are same as server location"};
		default = profileNamespace getVariable ["ncb_param_realTime",0];
	};
	class ncb_param_fullMoon : BaseClass {
		title = "Permanent full moon nights";
		values[] = {0,1};
		texts[] = {"Disable","Enable"};
		default = profileNamespace getVariable ["ncb_param_fullMoon",0];
		paramReplace = "[false,true]";
	};
	class ncb_param_dayTimeRatio : BaseClass {
		title = "Daytime ratio";
		values[] = {-1,-2,-3,-4,-5,-6,-7,-8,-9,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60};
		texts[] = {"0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60"};
		default = profileNamespace getVariable ["ncb_param_dayTimeRatio",6];
		publicClass = 0;
	};
	class ncb_param_nightTimeRatio : BaseClass {
		title = "Nighttime ratio";
		values[] = {-1,-2,-3,-4,-5,-6,-7,-8,-9,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60};
		texts[] = {"0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60"};
		default = profileNamespace getVariable ["ncb_param_nightTimeRatio",12];
		publicClass = 0;
	};
	class ncb_param_startingWeather : BaseClass {
		title = "Starting weather";
		values[] = {0,1,2,3};
		texts[] = {"Clear","Cloudy","Foggy","Rain"};
		default = profileNamespace getVariable ["ncb_param_startingWeather",1];
		publicClass = 0;
	};
	class ncb_param_startingYear : BaseClass {
		title = "Starting year";
		values[] = {1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050};
		texts[] = {"1914","1915","1916","1917","1918","1919","1920","1921","1922","1923","1924","1925","1926","1927","1928","1929","1930","1931","1932","1933","1934","1935","1936","1937","1938","1939","1940","1941","1942","1943","1944","1945","1946","1947","1948","1949","1950","1951","1952","1953","1954","1955","1956","1957","1958","1959","1960","1961","1962","1963","1964","1965","1966","1967","1968","1969","1970","1971","1972","1973","1974","1975","1976","1977","1978","1979","1980","1981","1982","1983","1984","1985","1986","1987","1988","1989","1990","1991","1992","1993","1994","1995","1996","1997","1998","1999","2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020","2021","2022","2023","2024","2025","2026","2027","2028","2029","2030","2031","2032","2033","2034","2035","2036","2037","2038","2039","2040","2041","2042","2043","2044","2045","2046","2047","2048","2049","2050"};
		default = profileNamespace getVariable ["ncb_param_startingYear",2016];
		publicClass = 0;
	};
	class ncb_param_startingMonth : BaseClass {
		title = "Starting month";
		values[] = {1,2,3,4,5,6,7,8,9,10,11,12};
		texts[] = {"1","2","3","4","5","6","7","8","9","10","11","12"};
		default = profileNamespace getVariable ["ncb_param_startingMonth",1];
		publicClass = 0;
	};
	class ncb_param_startingDay : BaseClass {
		title = "Starting day";
		values[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31};
		texts[] = {"1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31"};
		default = profileNamespace getVariable ["ncb_param_startingDay",3];
		publicClass = 0;
	};
	class ncb_param_startingHour : BaseClass {
		title = "Starting hour";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23};
		texts[] = {"Midnight","1 AM","2 AM","3 AM","4 AM","5 AM","6 AM","7 AM","8 AM","9 AM","10 AM","11 AM","High Noon","1 PM","2 PM","3 PM","4 PM","5 PM","6 PM","7 PM","8 PM","9 PM","10 PM","11 PM"};
		default = profileNamespace getVariable ["ncb_param_startingHour",9];
		publicClass = 0;
	};
	class ncb_param_startingMinute : BaseClass {
		title = "Starting minutes";
		values[] = {0,5,10,15,20,25,30,35,40,45,50,55};
		texts[] = {"00 min","05 mins","10 mins","15 mins","20 mins","25 mins","30 mins","35 mins","40 mins","45 mins","50 mins","55 mins"};
		default = profileNamespace getVariable ["ncb_param_startingMinute",00];
		publicClass = 0;
	};
	class ncb_param_grassRenderDistance : BaseClass {
		title = "Grass render distance";
		values[] = {1,2,4,8,16,32,64,128};
		texts[] = {"No grass","Low","Standard","High","Very High","Ultra","Ultra Mega","You love the Grass"};
		default = profileNamespace getVariable ["ncb_param_grassRenderDistance",4];
	};
	class ncb_param_shadowRenderDistance : BaseClass {
		title = "Shadow render distance";
		values[] = {50,100,150,200};
		texts[] = {"50m","100m","150m","200m"};
		default = profileNamespace getVariable ["ncb_param_shadowRenderDistance",50];
	};
	class ncb_param_localFurniture : BaseClass {
		title = "Enable/disable house furnishings and objects";
		values[] = {0,1};
		texts[] = {"Disabled","Enabled"};
		default = profileNamespace getVariable ["ncb_param_localFurniture",1];
	};
	class ncb_param_lootRefreshTimer : BaseClass {
		title = "Define how long until loot refreshes";
		values[] = {1e10,1,2,3,4,5,6,7,8,9,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100};
		texts[] = {"Never","Every minute","Every 2 minutes","Every 3 minutes","Every 4 minutes","Every 5 minutes","Every 6 minutes","Every 7 minutes","Every 8 minutes","Every 9 minutes","Every 10 minutes","Every 15 minutes","Every 20 minutes","Every 25 minutes","Every 30 minutes","Every 35 minutes","Every 40 minutes","Every 45 minutes","Every 50 minutes","Every 55 minutes","Every 60 minutes","Every 65 minutes","Every 70 minutes","Every 75 minutes","Every 80 minutes","Every 85 minutes","Every 90 minutes","Every 95 minutes","Every 100 minutes"};
		default = profileNamespace getVariable ["ncb_param_lootRefreshTimer",10];
		publicClass = 0;
	};
	class ncb_param_lootHolderDensity : BaseClass {
		title = "Loot Holder Density";
		values[] = {-100,1,2,3,4,5,6,7,8,9,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100};
		texts[] = {"None","1%","2%","3%","4%","5%","6%","7%","8%","9%","10%","15%","20%","25%","30%","35%","40%","45%","50%","55%","60%","65%","70%","75%","80%","85%","90%","95%","100%"};
		//texts[] = __EXEC (getArray(missionConfigFile >> "Params" >> "ncb_param_lootHolderDensity" >> "values") apply {str _x + "%"});
		default = profileNamespace getVariable ["ncb_param_lootHolderDensity",70];
		paramMultiplier = 0.01;
		publicClass = 0;
	};
	class ncb_param_baseNumbItemsLootPerPile : BaseClass {
		title = "Base number of items per pile of loot";
		values[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20};
		texts[] = {"1 item","2 items","3 items","4 items","5 items","6 items","7 items","8 items","9 items","10 items","11 items","12 items","13 items","14 items","15 items","16 items","17 items","18 items","19 items","20 items"};
		default = profileNamespace getVariable ["ncb_param_lootBaseNumbItemsPerHolder",6];
		publicClass = 0;
	};
	class ncb_param_ambientLife : ncb_param_fullMoon {
		title = "Ambient life";
		default = profileNamespace getVariable ["ncb_param_ambientLife",0];
	};
	class ncb_param_ambientSounds : ncb_param_fullMoon {
		title = "Ambient sounds";
		default = profileNamespace getVariable ["ncb_param_ambientSounds",0];
	};
	class spacer_3a : spacer_01 {};
	class spacer_3b : spacer_01 {
		title = "------------------------ WRECK OPTIONS ------------------------";
	};
	class spacer_3c : spacer_01 {};
	class ncb_param_roadWrecks : BaseClass {
		title = "Road wrecks";
		values[] = {0,50,100,150,200,250,300,350,400,450,500,550,600,650,700,750,800,850,900,950,1000};
		texts[] = {"None","50","100","150","200","250","300","350","400","450","500","550","600","650","700","750","800","850","900","950","1000"};
		default = profileNamespace getVariable ["ncb_param_roadWrecks",500];
		publicClass = 0;
	};
	class ncb_param_airWrecks : BaseClass {
		title = "Air wrecks";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100};
		texts[] = {"None","1","2","3","4","5","6","7","8","9","10","15","20","25","30","35","40","45","50","55","60","65","70","75","80","85","90","95","100"};
		default = profileNamespace getVariable ["ncb_param_airWrecks",10];
		publicClass = 0;
	};
	class spacer_4a : spacer_01 {};
	class spacer_4b : spacer_01 {
		title = "------------------------ TASK OPTIONS ------------------------";
	};
	class spacer_4c : spacer_01 {};
	class ncb_param_initialNumberHeliPatrols : BaseClass {
		title = "Initial number of heli patrols (will only spawn if Government Helipads have spawned onto the map)";
		values[] = {1,2,3,4,5,6,7,8,9,10};
		texts[] = {"1","2","3","4","5","6","7","8","9","10"};
		default = profileNamespace getVariable ["ncb_param_initialNumberHeliPatrols",3];
		publicClass = 0;
	};
	class ncb_param_heliRespawnDelay : BaseClass {
		title = "Heli patrol respawn delay";
		values[] = {60,120,180,240,300,360,420,480,540,600};
		texts[] = {"1 min","2 mins","3 mins","4 mins","5 mins","6 mins","7 mins","8 mins","9 mins","10 mins"};
		default = profileNamespace getVariable ["ncb_param_heliRespawnDelay",60];
		publicClass = 0;
	};
	class ncb_param_govHelipads : BaseClass {
		title = "Government Helipads";
		values[] = {0,1,2,3,4,5,6,7,8,9,10};
		texts[] = {"None","1","2","3","4","5","6","7","8","9","10"};
		default = profileNamespace getVariable ["ncb_param_govHelipads",3];
		publicClass = 0;
	};
	class ncb_param_zoneLocationValueAirBases : BaseClass {
		title = "Number of patrolling squads at Air Base zones";
		values[] = {1,2,3,4,5,6,7,8,9,10};
		texts[] = {"1","2","3","4","5","6","7","8","9","10"};
		default = profileNamespace getVariable ["ncb_param_zoneLocationValueAirBases",4];
		publicClass = 0;
	};
	class ncb_param_govRadioTransmitters : BaseClass {
		title = "Government Radio Transmitters";
		values[] = {0,1,2,3,4,5,6,7,8,9,10};
		texts[] = {"None","1","2","3","4","5","6","7","8","9","10"};
		default = profileNamespace getVariable ["ncb_param_govRadioTransmitters",3];
		publicClass = 0;
	};
	class ncb_param_govRadioTransmitterStaticChance : BaseClass {
		title = "Chance of static weapon spawning at free transmitter position";
		values[] = {-1,1,2,3,4,5,6,7,8,9,10};
		texts[] = {"No chance","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%"};
		default = profileNamespace getVariable ["ncb_param_govRadioTransmitterStaticChance",3];
		paramMultiplier = 0.1;
		publicClass = 0;
	};
	class ncb_param_zoneLocationValueRadioTransmitters : BaseClass {
		title = "Number of patrolling squads at Radio Transmitter zones";
		values[] = {1,2,3,4,5,6,7,8,9,10};
		texts[] = {"1","2","3","4","5","6","7","8","9","10"};
		default = profileNamespace getVariable ["ncb_param_zoneLocationValueRadioTransmitters",4];
			publicClass = 0;
	};
	class ncb_param_govArtilleryEmplacements : BaseClass {
		title = "Government Artillery Emplacements";
		values[] = {0,1,2,3,4,5,6,7,8,9,10};
		texts[] = {"None","1","2","3","4","5","6","7","8","9","10"};
		default = profileNamespace getVariable ["ncb_param_govArtilleryEmplacements",3];
		publicClass = 0;
	};
	class ncb_param_zoneLocationValueGovArtilleryEmplacements : BaseClass {
		title = "Number of patrolling squads at Government Artillery Emplacement zones";
		values[] = {1,2,3,4,5,6,7,8,9,10};
		texts[] = {"1","2","3","4","5","6","7","8","9","10"};
		default = profileNamespace getVariable ["ncb_param_zoneLocationValueGovArtilleryEmplacements",4];
		publicClass = 0;
	};
	class spacer_5sgsfef : spacer_01 {};
	class ncb_param_sideMissionInterval : BaseClass {
		title = "interval between side missions";
		values[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50};
		texts[] = {"1 min","2 mins","3 mins","4 mins","5 mins","6 mins","7 mins","8 mins","9 mins","10 mins","11 mins","12 mins","13 mins","14 mins","15 mins","16 mins","17 mins","18 mins","19 mins","20 mins","21 mins","22 mins","23 mins","24 mins","25 mins","26 mins","27 mins","28 mins","29 mins","30 mins","31 mins","32 mins","33 mins","34 mins","35 mins","36 mins","37 mins","38 mins","39 mins","40 mins","41 mins","42 mins","43 mins","44 mins","45 mins","46 mins","47 mins","48 mins","49 mins","50 mins"};
		default = profileNamespace getVariable ["ncb_param_sideMissionInterval",5];
		paramMultiplier = 60;
		publicClass = 0;
	};

	class spacer_5a : spacer_01 {};
	class spacer_5b : spacer_01 {
		title = "------------------------ AI OPTIONS ------------------------";
	};
	class spacer_5c : spacer_01 {};
	class ncb_param_aiPrimaryWeaponChance : BaseClass {
		title = "Chance of AI patrol units carrrying a primary weapon";
		values[] = {-10,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100};
		texts[] = {"Never","5%","10%","15%","20%","25%","30%","35%","40%","45%","50%","55%","60%","65%","70%","75%","80%","85%","90%","95%","Always"};
		default = profileNamespace getVariable ["ncb_param_aiPrimaryWeaponChance",100];
		paramMultiplier = 0.01;
		publicClass = 0;
	};
	class ncb_param_aiSecondaryWeaponChance : ncb_param_aiPrimaryWeaponChance {
		title = "Chance of AI patrol units carrrying a launcher";
		default = profileNamespace getVariable ["ncb_param_aiSecondaryWeaponChance",20];
	};
	class ncb_param_aiHandgunWeaponChance : ncb_param_aiPrimaryWeaponChance {
		title = "Chance of AI patrol units carrrying a handgun";
		default = profileNamespace getVariable ["ncb_param_aiHandgunWeaponChance",-10];
	};
	class ncb_param_aiDisableVehicleVisionNV : BaseClass {
		title = "Disable NV equipment on vehicles";
		values[] = {0,1};
		texts[] = {"NV enabled","NV Disabled"};
		default = profileNamespace getVariable ["ncb_param_aiDisableVehicleVisionNV",1];
		paramReplace = "[false,true]";
		publicClass = 0;
	};
	class ncb_param_aiDisableVehicleVisionTI : ncb_param_aiDisableVehicleVisionNV {
		title = "Disable TI equipment on vehicles";
		texts[] = {"TI enabled","TI Disabled"};
		default = profileNamespace getVariable ["ncb_param_aiDisableVehicleVisionTI",1];
		publicClass = 0;
	};
	class ncb_param_lockEnemyVehicles : ncb_param_aiDisableVehicleVisionNV {
		title = "Lock enemy vehicles";
		texts[] = {"Unlocked for players","Locked for players"};
		default = profileNamespace getVariable ["ncb_param_lockEnemyVehicles",1];
		publicClass = 0;
	};
	class ncb_param_aiAimingError : BaseClass {
		title = "Aiming error";
		values[] = {0,1};
		texts[] = {"Off","On"};
		default = profileNamespace getVariable ["ncb_param_aiAimingError",1];
	};
	class ncb_param_aiAutoCombat : BaseClass {
		title = "Auto-combat";
		values[] = {0,1};
		texts[] = {"Off","On"};
		default = profileNamespace getVariable ["ncb_param_aiAutoCombat",1];
	};
	class ncb_param_aiCover : BaseClass {
		title = "Cover";
		values[] = {0,1};
		texts[] = {"Off","On"};
		default = profileNamespace getVariable ["ncb_param_aiCover",1];
	};
	class ncb_param_aiFSM : BaseClass {
		title = "FSM";
		values[] = {0,1};
		texts[] = {"Off","On"};
		default = profileNamespace getVariable ["ncb_param_aiFSM",1];
	};
	class ncb_param_aiStamina : BaseClass {
		title = "Stamina";
		values[] = {0,1};
		texts[] = {"Off","On"};
		default = profileNamespace getVariable ["ncb_param_aiStamina",1];
	};
	class ncb_param_aiSuppression : BaseClass {
		title = "Suppression";
		values[] = {0,1};
		texts[] = {"Off","On"};
		default = profileNamespace getVariable ["ncb_param_aiSuppression",1];
	};
	class spacer_6drgdgdqa : spacer_01 {};
	class spacer_6seFERFGHHb : spacer_01 {
		title = "------------------------ ai weapon tiers ------------------------";
	};
	class spacer_6JRTGRVSDRTGc : spacer_01 {};
	class ncb_param_enemyUnitMinWeaponTier : BaseClass {
		title = "Enemy unit minimum weapon tier";
		values[] = {0,1,2,3,4};
		texts[] = {"0","1","2","3","4"};
		default = profileNamespace getVariable ["ncb_param_enemyUnitMinWeaponTier",0];
	};
	class ncb_param_enemyUnitMidWeaponTier : ncb_param_enemyUnitMinWeaponTier {
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40};
		texts[] = {"0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1","1.1","1.2","1.3","1.4","1.5","1.6","1.7","1.8","1.9","2","2.1","2.2","2.3","2.4","2.5","2.6","2.7","2.8","2.9","3","3.1","3.2","3.3","3.4","3.5","3.6","3.7","3.8","3.9","4"};
		title = "Enemy unit mid weapon tier";
		default = profileNamespace getVariable ["ncb_param_enemyUnitMidWeaponTier",1];
		paramMultiplier = 0.1;
	};
	class ncb_param_enemyUnitMaxWeaponTier : ncb_param_enemyUnitMinWeaponTier {
		title = "Enemy unit maximum weapon tier";
		default = profileNamespace getVariable ["ncb_param_enemyUnitMaxWeaponTier",2];
	};
	class ncb_param_enemySniperMinWeaponTier : ncb_param_enemyUnitMinWeaponTier {
		title = "Enemy sniper minimum weapon tier";
		default = profileNamespace getVariable ["ncb_param_enemySniperMinWeaponTier",1];
	};
	class ncb_param_enemySniperMidWeaponTier : ncb_param_enemyUnitMidWeaponTier {
		title = "Enemy sniper mid weapon tier";
		default = profileNamespace getVariable ["ncb_param_enemySniperMidWeaponTier",2.8];
	};
	class ncb_param_enemySniperMaxWeaponTier : ncb_param_enemyUnitMinWeaponTier {
		title = "Enemy sniper maximum weapon tier";
		default = profileNamespace getVariable ["ncb_param_enemySniperMaxWeaponTier",4];
	};
	class ncb_param_enemyParaMinWeaponTier : ncb_param_enemyUnitMinWeaponTier {
		title = "Enemy para minimum weapon tier";
		default = profileNamespace getVariable ["ncb_param_enemyParaMinWeaponTier",0];
	};
	class ncb_param_enemyParaMidWeaponTier : ncb_param_enemyUnitMidWeaponTier {
		title = "Enemy para mid weapon tier";
		default = profileNamespace getVariable ["ncb_param_enemyParaMidWeaponTier",1];
	};
	class ncb_param_enemyParaMaxWeaponTier : ncb_param_enemyUnitMinWeaponTier {
		title = "Enemy para maximum weapon tier";
		default = profileNamespace getVariable ["ncb_param_enemyParaMaxWeaponTier",2];
	};
	class spacer_6drgdgkgjhgjmjkdqa : spacer_01 {};
	class spacer_6sedgyfcjynmndxft : spacer_01 {
		title = "------------------------ ai launcher tiers ------------------------";
	};
	class spacer_dhgfd576576gdgdqa : spacer_01 {};
	class ncb_param_enemyUnitMinLauncherTier : BaseClass {
		title = "Enemy unit minimum launcher tier";
		values[] = {0,1,2};
		texts[] = {"0","1","2"};
		default = profileNamespace getVariable ["ncb_param_enemyUnitMinLauncherTier",0];
	};
	class ncb_param_enemyUnitMidLauncherTier : ncb_param_enemyUnitMinLauncherTier {
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20};
		texts[] = {"0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1","1.1","1.2","1.3","1.4","1.5","1.6","1.7","1.8","1.9","2"};
		title = "Enemy unit mid launcher tier";
		default = profileNamespace getVariable ["ncb_param_enemyUnitMidLauncherTier",1];
		paramMultiplier = 0.1;
	};
	class ncb_param_enemyUnitMaxLauncherTier : ncb_param_enemyUnitMinLauncherTier {
		title = "Enemy unit maximum launcher tier";
		default = profileNamespace getVariable ["ncb_param_enemyUnitMaxLauncherTier",2];
	};
	class ncb_param_enemyParaMinLauncherTier : ncb_param_enemyUnitMinLauncherTier {
		title = "Enemy para minimum launcher tier";
		default = profileNamespace getVariable ["ncb_param_enemyParaMinLauncherTier",0];
	};
	class ncb_param_enemyParaMidLauncherTier : ncb_param_enemyUnitMidLauncherTier {
		title = "Enemy para mid launcher tier";
		default = profileNamespace getVariable ["ncb_param_enemyParaMidLauncherTier",1];
	};
	class ncb_param_enemyParaMaxLauncherTier : ncb_param_enemyUnitMinLauncherTier {
		title = "Enemy para maximum launcher tier";
		default = profileNamespace getVariable ["ncb_param_enemyParaMaxLauncherTier",2];
	};
	class spacer_6a : spacer_01 {};
	class spacer_6b : spacer_01 {
		title = "------------------------ ai skill options ------------------------";
	};
	class spacer_6c : spacer_01 {};
	class ncb_param_aiSkillGeneral : BaseClass {
		title = "Skill (general)";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100};
		texts[] = {"0","0.01","0.02","0.03","0.04","0.05","0.06","0.07","0.08","0.09","0.10","0.11","0.12","0.13","0.14","0.15","0.16","0.17","0.18","0.19","0.20","0.21","0.22","0.23","0.24","0.25","0.26","0.27","0.28","0.29","0.30","0.31","0.32","0.33","0.34","0.35","0.36","0.37","0.38","0.39","0.40","0.41","0.42","0.43","0.44","0.45","0.46","0.47","0.48","0.49","0.50","0.51","0.52","0.53","0.54","0.55","0.56","0.57","0.58","0.59","0.60","0.61","0.62","0.63","0.64","0.65","0.66","0.67","0.68","0.69","0.70","0.71","0.72","0.73","0.74","0.75","0.76","0.77","0.78","0.79","0.80","0.81","0.82","0.83","0.84","0.85","0.86","0.87","0.88","0.89","0.90","0.91","0.92","0.93","0.94","0.95","0.96","0.97","0.98","0.99","1"};
		//values[] = {0,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100};
		//texts[] = {"0","0.1","0.15","0.2","0.25","0.3","0.35","0.4","0.45","0.5","0.55","0.6","0.65","0.7","0.75","0.8","0.85","0.9","0.95","1"};
		default = profileNamespace getVariable ["ncb_param_aiSkillGeneral",100];
	};
	class ncb_param_aiSkillAimingAccuracy : BaseClass {
		title = "Skill (aiming accuracy)";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100};
		texts[] = {"0","0.01","0.02","0.03","0.04","0.05","0.06","0.07","0.08","0.09","0.10","0.11","0.12","0.13","0.14","0.15","0.16","0.17","0.18","0.19","0.20","0.21","0.22","0.23","0.24","0.25","0.26","0.27","0.28","0.29","0.30","0.31","0.32","0.33","0.34","0.35","0.36","0.37","0.38","0.39","0.40","0.41","0.42","0.43","0.44","0.45","0.46","0.47","0.48","0.49","0.50","0.51","0.52","0.53","0.54","0.55","0.56","0.57","0.58","0.59","0.60","0.61","0.62","0.63","0.64","0.65","0.66","0.67","0.68","0.69","0.70","0.71","0.72","0.73","0.74","0.75","0.76","0.77","0.78","0.79","0.80","0.81","0.82","0.83","0.84","0.85","0.86","0.87","0.88","0.89","0.90","0.91","0.92","0.93","0.94","0.95","0.96","0.97","0.98","0.99","1"};
		default = profileNamespace getVariable ["ncb_param_aiSkillAimingAccuracy",25];
	};
	class ncb_param_aiSkillAimingSpeed : BaseClass {
		title = "Skill (aiming speed)";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100};
		texts[] = {"0","0.01","0.02","0.03","0.04","0.05","0.06","0.07","0.08","0.09","0.10","0.11","0.12","0.13","0.14","0.15","0.16","0.17","0.18","0.19","0.20","0.21","0.22","0.23","0.24","0.25","0.26","0.27","0.28","0.29","0.30","0.31","0.32","0.33","0.34","0.35","0.36","0.37","0.38","0.39","0.40","0.41","0.42","0.43","0.44","0.45","0.46","0.47","0.48","0.49","0.50","0.51","0.52","0.53","0.54","0.55","0.56","0.57","0.58","0.59","0.60","0.61","0.62","0.63","0.64","0.65","0.66","0.67","0.68","0.69","0.70","0.71","0.72","0.73","0.74","0.75","0.76","0.77","0.78","0.79","0.80","0.81","0.82","0.83","0.84","0.85","0.86","0.87","0.88","0.89","0.90","0.91","0.92","0.93","0.94","0.95","0.96","0.97","0.98","0.99","1"};
		default = profileNamespace getVariable ["ncb_param_aiSkillAimingSpeed",25];
	};
	class ncb_param_aiSkillAimingSteadiness : BaseClass {
		title = "Skill (aiming steadiness)";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100};
		texts[] = {"0","0.01","0.02","0.03","0.04","0.05","0.06","0.07","0.08","0.09","0.10","0.11","0.12","0.13","0.14","0.15","0.16","0.17","0.18","0.19","0.20","0.21","0.22","0.23","0.24","0.25","0.26","0.27","0.28","0.29","0.30","0.31","0.32","0.33","0.34","0.35","0.36","0.37","0.38","0.39","0.40","0.41","0.42","0.43","0.44","0.45","0.46","0.47","0.48","0.49","0.50","0.51","0.52","0.53","0.54","0.55","0.56","0.57","0.58","0.59","0.60","0.61","0.62","0.63","0.64","0.65","0.66","0.67","0.68","0.69","0.70","0.71","0.72","0.73","0.74","0.75","0.76","0.77","0.78","0.79","0.80","0.81","0.82","0.83","0.84","0.85","0.86","0.87","0.88","0.89","0.90","0.91","0.92","0.93","0.94","0.95","0.96","0.97","0.98","0.99","1"};
		default = profileNamespace getVariable ["ncb_param_aiSkillAimingSteadiness",25];
	};
	class ncb_param_aiSkillCommanding : BaseClass {
		title = "Skill (commanding)";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100};
		texts[] = {"0","0.01","0.02","0.03","0.04","0.05","0.06","0.07","0.08","0.09","0.10","0.11","0.12","0.13","0.14","0.15","0.16","0.17","0.18","0.19","0.20","0.21","0.22","0.23","0.24","0.25","0.26","0.27","0.28","0.29","0.30","0.31","0.32","0.33","0.34","0.35","0.36","0.37","0.38","0.39","0.40","0.41","0.42","0.43","0.44","0.45","0.46","0.47","0.48","0.49","0.50","0.51","0.52","0.53","0.54","0.55","0.56","0.57","0.58","0.59","0.60","0.61","0.62","0.63","0.64","0.65","0.66","0.67","0.68","0.69","0.70","0.71","0.72","0.73","0.74","0.75","0.76","0.77","0.78","0.79","0.80","0.81","0.82","0.83","0.84","0.85","0.86","0.87","0.88","0.89","0.90","0.91","0.92","0.93","0.94","0.95","0.96","0.97","0.98","0.99","1"};
		default = profileNamespace getVariable ["ncb_param_aiSkillCommanding",100];
	};
	class ncb_param_aiSkillCourage : BaseClass {
		title = "Skill (courage) - affects suppression!";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100};
		texts[] = {"0","0.01","0.02","0.03","0.04","0.05","0.06","0.07","0.08","0.09","0.10","0.11","0.12","0.13","0.14","0.15","0.16","0.17","0.18","0.19","0.20","0.21","0.22","0.23","0.24","0.25","0.26","0.27","0.28","0.29","0.30","0.31","0.32","0.33","0.34","0.35","0.36","0.37","0.38","0.39","0.40","0.41","0.42","0.43","0.44","0.45","0.46","0.47","0.48","0.49","0.50","0.51","0.52","0.53","0.54","0.55","0.56","0.57","0.58","0.59","0.60","0.61","0.62","0.63","0.64","0.65","0.66","0.67","0.68","0.69","0.70","0.71","0.72","0.73","0.74","0.75","0.76","0.77","0.78","0.79","0.80","0.81","0.82","0.83","0.84","0.85","0.86","0.87","0.88","0.89","0.90","0.91","0.92","0.93","0.94","0.95","0.96","0.97","0.98","0.99","1"};
		default = profileNamespace getVariable ["ncb_param_aiSkillCourage",100];
	};
	class ncb_param_aiSkillEndurance : BaseClass {
		title = "Skill (endurance)";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100};
		texts[] = {"0","0.01","0.02","0.03","0.04","0.05","0.06","0.07","0.08","0.09","0.10","0.11","0.12","0.13","0.14","0.15","0.16","0.17","0.18","0.19","0.20","0.21","0.22","0.23","0.24","0.25","0.26","0.27","0.28","0.29","0.30","0.31","0.32","0.33","0.34","0.35","0.36","0.37","0.38","0.39","0.40","0.41","0.42","0.43","0.44","0.45","0.46","0.47","0.48","0.49","0.50","0.51","0.52","0.53","0.54","0.55","0.56","0.57","0.58","0.59","0.60","0.61","0.62","0.63","0.64","0.65","0.66","0.67","0.68","0.69","0.70","0.71","0.72","0.73","0.74","0.75","0.76","0.77","0.78","0.79","0.80","0.81","0.82","0.83","0.84","0.85","0.86","0.87","0.88","0.89","0.90","0.91","0.92","0.93","0.94","0.95","0.96","0.97","0.98","0.99","1"};
		default = profileNamespace getVariable ["ncb_param_aiSkillEndurance",100];
	};
	class ncb_param_aiSkillReloadSpeed : BaseClass {
		title = "Skill (reload speed)";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100};
		texts[] = {"0","0.01","0.02","0.03","0.04","0.05","0.06","0.07","0.08","0.09","0.10","0.11","0.12","0.13","0.14","0.15","0.16","0.17","0.18","0.19","0.20","0.21","0.22","0.23","0.24","0.25","0.26","0.27","0.28","0.29","0.30","0.31","0.32","0.33","0.34","0.35","0.36","0.37","0.38","0.39","0.40","0.41","0.42","0.43","0.44","0.45","0.46","0.47","0.48","0.49","0.50","0.51","0.52","0.53","0.54","0.55","0.56","0.57","0.58","0.59","0.60","0.61","0.62","0.63","0.64","0.65","0.66","0.67","0.68","0.69","0.70","0.71","0.72","0.73","0.74","0.75","0.76","0.77","0.78","0.79","0.80","0.81","0.82","0.83","0.84","0.85","0.86","0.87","0.88","0.89","0.90","0.91","0.92","0.93","0.94","0.95","0.96","0.97","0.98","0.99","1"};
		default = profileNamespace getVariable ["ncb_param_aiSkillReloadSpeed",25];
	};
	class ncb_param_aiSkillSpotDistance : BaseClass {
		title = "Skill (spot distance)";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100};
		texts[] = {"0","0.01","0.02","0.03","0.04","0.05","0.06","0.07","0.08","0.09","0.10","0.11","0.12","0.13","0.14","0.15","0.16","0.17","0.18","0.19","0.20","0.21","0.22","0.23","0.24","0.25","0.26","0.27","0.28","0.29","0.30","0.31","0.32","0.33","0.34","0.35","0.36","0.37","0.38","0.39","0.40","0.41","0.42","0.43","0.44","0.45","0.46","0.47","0.48","0.49","0.50","0.51","0.52","0.53","0.54","0.55","0.56","0.57","0.58","0.59","0.60","0.61","0.62","0.63","0.64","0.65","0.66","0.67","0.68","0.69","0.70","0.71","0.72","0.73","0.74","0.75","0.76","0.77","0.78","0.79","0.80","0.81","0.82","0.83","0.84","0.85","0.86","0.87","0.88","0.89","0.90","0.91","0.92","0.93","0.94","0.95","0.96","0.97","0.98","0.99","1"};
		default = profileNamespace getVariable ["ncb_param_aiSkillSpotDistance",25];
	};
	class ncb_param_aiSkillSpotTime : BaseClass {
		title = "Skill (spot time)";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100};
		texts[] = {"0","0.01","0.02","0.03","0.04","0.05","0.06","0.07","0.08","0.09","0.10","0.11","0.12","0.13","0.14","0.15","0.16","0.17","0.18","0.19","0.20","0.21","0.22","0.23","0.24","0.25","0.26","0.27","0.28","0.29","0.30","0.31","0.32","0.33","0.34","0.35","0.36","0.37","0.38","0.39","0.40","0.41","0.42","0.43","0.44","0.45","0.46","0.47","0.48","0.49","0.50","0.51","0.52","0.53","0.54","0.55","0.56","0.57","0.58","0.59","0.60","0.61","0.62","0.63","0.64","0.65","0.66","0.67","0.68","0.69","0.70","0.71","0.72","0.73","0.74","0.75","0.76","0.77","0.78","0.79","0.80","0.81","0.82","0.83","0.84","0.85","0.86","0.87","0.88","0.89","0.90","0.91","0.92","0.93","0.94","0.95","0.96","0.97","0.98","0.99","1"};
		default = profileNamespace getVariable ["ncb_param_aiSkillSpotTime",25];
	};
	class spacer_7ff : spacer_01 {};
	class spacer_8ff : spacer_01 {
		title = "------------------------ EQUIPMENT OPTIONS ------------------------";
	};
	class spacer_7fg : spacer_01 {};
	class ncb_param_vanillaEquipmentAllowed : BaseClass {
		title = "Allow Vanilla weapons and equipment - Global option (affects AI, loot and crates)";
		values[] = {0,1};
		texts[] = {"Disallow","Allow"};
		default = profileNamespace getVariable ["ncb_param_vanillaEquipmentAllowed",1];
	};
	/*class ncb_param_dlcEquipmentAllowed : BaseClass {
		title = "Allow DLC weapons and equipment (set individual dlc below) - Global option (affects AI, loot and crates)";
		values[] = {0,1};
		texts[] = {"Disallow","Allow"};
		default = profileNamespace getVariable ["ncb_param_dlcEquipmentAllowed",1];
	};*/
	class ncb_param_dlcEquipmentAllowedKart : BaseClass {
		title = "Allow Kart DLC weapons and equipment - Global option (affects AI, loot and crates)";
		values[] = {0,1};
		texts[] = {"Disallow","Allow"};
		default = profileNamespace getVariable ["ncb_param_dlcEquipmentAllowedKart",1];
		paramReplace = "[false,true]";
		publicClass = 0;
	};
	class ncb_param_dlcEquipmentAllowedMark : ncb_param_dlcEquipmentAllowedKart {
		title = "Allow Marksman DLC weapons and equipment - Global option (affects AI, loot and crates)";
		default = profileNamespace getVariable ["ncb_param_dlcEquipmentAllowedMark",1];
	};
	class ncb_param_dlcEquipmentAllowedHeli : ncb_param_dlcEquipmentAllowedKart {
		title = "Allow Helicopters DLC weapons and equipment - Global option (affects AI, loot and crates)";
		default = profileNamespace getVariable ["ncb_param_dlcEquipmentAllowedHeli",1];
	};
	class ncb_param_dlcEquipmentAllowedApex : ncb_param_dlcEquipmentAllowedKart {
		title = "Allow Apex DLC weapons and equipment - Global option (affects AI, loot and crates)";
		default = profileNamespace getVariable ["ncb_param_dlcEquipmentAllowedApex",1];
	};
	class ncb_param_dlcEquipmentAllowedJets : ncb_param_dlcEquipmentAllowedKart {
		title = "Allow Jets DLC weapons and equipment - Global option (affects AI, loot and crates)";
		default = profileNamespace getVariable ["ncb_param_dlcEquipmentAllowedJets",1];
	};
	class ncb_param_dlcEquipmentAllowedLOW : ncb_param_dlcEquipmentAllowedKart {
		title = "Allow LOW DLC weapons and equipment - Global option (affects AI, loot and crates)";
		default = profileNamespace getVariable ["ncb_param_dlcEquipmentAllowedLOW",1];
	};
	class ncb_param_dlcEquipmentAllowedEnoch : ncb_param_dlcEquipmentAllowedKart {
		title = "Allow Enoch DLC weapons and equipment - Global option (affects AI, loot and crates)";
		default = profileNamespace getVariable ["ncb_param_dlcEquipmentAllowedEnoch",1];
	};
	class ncb_param_dlcEquipmentAllowedTank : ncb_param_dlcEquipmentAllowedKart {
		title = "Allow Tank DLC weapons and equipment - Global option (affects AI, loot and crates)";
		default = profileNamespace getVariable ["ncb_param_dlcEquipmentAllowedTank",1];
	};
	class spacer_7fgawd : spacer_01 {};
	class ncb_param_nvScopesAllowedAI : BaseClass {
		title = "Allow NV scopes for AI (applies to firearms and launchers)";
		values[] = {0,1};
		texts[] = {"Disallow","Allow"};
		default = profileNamespace getVariable ["ncb_param_nvScopesAllowedAI",1];
	};
	class ncb_param_tiScopesAllowedAI : BaseClass {
		title = "Allow TI scopes for AI (applies to firearms and launchers)";
		values[] = {0,1};
		texts[] = {"Disallow","Allow"};
		default = profileNamespace getVariable ["ncb_param_tiScopesAllowedAI",1];
	};
	class ncb_param_filterEquipmentSidesAI : BaseClass {
		title = "Filter allowed equipment for AI by sides";
		values[] = {0,1,2,3,4,5,6};
		texts[] = {"Allow all","East & Independent","East & West","Independent & West","East","Independent","West"};
		default = profileNamespace getVariable ["ncb_param_filterEquipmentSidesAI",0];
		paramReplace = "[[0,1,2],[0,1],[0,2],[1,2],[0],[2],[1]]";
	};
	class ncb_param_nonSideEquipmentAllowedAI : BaseClass {
		title = "Allow equipment not used by any side for AI";
		values[] = {0,1};
		texts[] = {"Disallow","Allow"};
		default = profileNamespace getVariable ["ncb_param_nonSideEquipmentAllowedAI",1];
		paramReplace = "[false,true]";
	};
	class spacer_7ffthsg : spacer_01 {};
	class ncb_param_nvScopesAllowedCrate : BaseClass {
		title = "Allow NV scopes in supply crates";
		values[] = {0,1};
		texts[] = {"Disallow","Allow"};
		default = profileNamespace getVariable ["ncb_param_nvScopesAllowedCrate",1];
	};
	class ncb_param_tiScopesAllowedCrate : BaseClass {
		title = "Allow TI scopes in supply crates";
		values[] = {0,1};
		texts[] = {"Disallow","Allow"};
		default = profileNamespace getVariable ["ncb_param_tiScopesAllowedCrate",1];
	};
	class ncb_param_filterEquipmentSidesCrate : BaseClass {
		title = "Filter allowed equipment in supply crates by sides";
		values[] = {0,1,2,3,4,5,6};
		texts[] = {"Allow all","East & Independent","East & West","Independent & West","East","Independent","West"};
		default = profileNamespace getVariable ["ncb_param_filterEquipmentSidesCrate",0];
		paramReplace = "[[0,1,2],[0,1],[0,2],[1,2],[0],[2],[1]]";
	};
	class ncb_param_nonSideEquipmentAllowedCrate : BaseClass {
		title = "Allow equipment not used by any side for supply crates";
		values[] = {0,1};
		texts[] = {"Disallow","Allow"};
		default = profileNamespace getVariable ["ncb_param_nonSideEquipmentAllowedCrate",1];
		paramReplace = "[false,true]";
	};
	class spacer_7fhukg : spacer_01 {};
	class ncb_param_nvScopesAllowedLoot : BaseClass {
		title = "Allow NV scopes in lootspawns";
		values[] = {0,1};
		texts[] = {"Disallow","Allow"};
		default = profileNamespace getVariable ["ncb_param_nvScopesAllowedLoot",1];
	};
	class ncb_param_tiScopesAllowedLoot : BaseClass {
		title = "Allow TI scopes in lootspawns";
		values[] = {0,1};
		texts[] = {"Disallow","Allow"};
		default = profileNamespace getVariable ["ncb_param_tiScopesAllowedLoot",1];
	};
	class ncb_param_filterEquipmentSidesLoot : BaseClass {
		title = "Filter allowed equipment in lootspawns by sides";
		values[] = {0,1,2,3,4,5,6};
		texts[] = {"Allow all","East & Independent","East & West","Independent & West","East","Independent","West"};
		default = profileNamespace getVariable ["ncb_param_filterEquipmentSidesLoot",0];
		paramReplace = "[[0,1,2],[0,1],[0,2],[1,2],[0],[2],[1]]";
	};
	class ncb_param_nonSideEquipmentAllowedLoot : BaseClass {
		title = "Allow equipment not used by any side for lootspawns";
		values[] = {0,1};
		texts[] = {"Disallow","Allow"};
		default = profileNamespace getVariable ["ncb_param_nonSideEquipmentAllowedLoot",1];
		paramReplace = "[false,true]";
	};
	class spacer_7a : spacer_01 {};
	class spacer_7b : spacer_01 {
		title = "------------------------ ZONE OPTIONS ------------------------";
	};
	class spacer_7c : spacer_01 {};
	class spacer_8a : spacer_01 {
		title = "------------------------ location value options - ** take care with these ** ------------------------";
	};
	class spacer_8b : spacer_01 {};
	class ncb_param_zoneLocationValueNameCityCapital : BaseClass {
		title = "Value for zone if it contains 'NameCityCapital'";
		values[] = {0,1,2,3,4,5,6,7,8,9,10};
		texts[] = {"0","1","2","3","4","5","6","7","8","9","10"};
		default = profileNamespace getVariable ["ncb_param_zoneLocationValueNameCityCapital",3];
		publicClass = 0;
	};
	class ncb_param_zoneLocationValueCityCenter : ncb_param_zoneLocationValueNameCityCapital {
		title = "Value for zone if it contains 'CityCenter'";
		default = profileNamespace getVariable ["ncb_param_zoneLocationValueCityCenter",0];
	};
	class ncb_param_zoneLocationValueNameCity : ncb_param_zoneLocationValueNameCityCapital {
		title = "Value for zone if it contains 'NameCity'";
		default = profileNamespace getVariable ["ncb_param_zoneLocationValueNameCity",0];
	};
	class ncb_param_zoneLocationValueNameVillage : ncb_param_zoneLocationValueNameCityCapital {
		title = "Value for zone if it contains 'NameVillage'";
		default = profileNamespace getVariable ["ncb_param_zoneLocationValueNameVillage",2];
	};
	class ncb_param_zoneLocationValueNameLocal : ncb_param_zoneLocationValueNameCityCapital {
		title = "Value for zone if it contains 'NameLocal'";
		default = profileNamespace getVariable ["ncb_param_zoneLocationValueNameLocal",0];
	};
	class ncb_param_zoneLocationValueNameMarine : ncb_param_zoneLocationValueNameCityCapital {
		title = "Value for zone if it contains 'NameMarine'";
		default = profileNamespace getVariable ["ncb_param_zoneLocationValueNameMarine",0];
	};
	class spacer_8bffd : spacer_01 {};
	class spacer_8ax : spacer_01 {
		title = "------------------------ reinforcement options ------------------------";
	};
	class spacer_8bx : spacer_01 {};
	class ncb_param_zoneReinforcementTimer : BaseClass {
		title = "Time between reinforcement checks (adds replacement squads)";
		values[] = {60,120,180,240,300,360,420,480,540,600};
		texts[] = {"1 min","2 mins","3 mins","4 mins","5 mins","6 mins","7 mins","8 mins","9 mins","10 mins"};
		default = profileNamespace getVariable ["ncb_param_zoneReinforcementTimer",120];
	};
	class ncb_param_zoneTotalReinforcementTimer : BaseClass {
		title = "Time between QRF checks (Totally reinforces zone)";
		values[] = {60,120,180,240,300,360,420,480,540,600,660,720,780,840,900,960,1020,1080,1140,1200};
		texts[] = {"1 min","2 mins","3 mins","4 mins","5 mins","6 mins","7 mins","8 mins","9 mins","10 mins","11 mins","12 mins","13 mins","14 mins","15 mins","16 mins","17 mins","18 mins","19 mins","20 mins"};
		default = profileNamespace getVariable ["ncb_param_zoneTotalReinforcementTimer",240];
	};
	class ncb_param_zoneReinforcementTickets : BaseClass {
		title = "Number of squad reinforcements before QRF considered";
		values[] = {-1,0,1,2,3,4,5,6,7,8,9,10};
		texts[] = {"Same as number of patrols in zone","No squads","1 squad","2 squads","3 squads","4 squads","5 squads","6 squads","7 squads","8 squads","9 squads","10 squads"};
		default = profileNamespace getVariable ["ncb_param_zoneReinforcementTickets",-1];
	};
	class ncb_param_gunshipPatrolTimerBase : BaseClass {
		title = "Base time gunship will patrol zone before RTB";
		values[] = {60,120,180,240,300,360,420,480,540,600,660,720,780,840,900,960,1020,1080,1140,1200};
		texts[] = {"1 min","2 mins","3 mins","4 mins","5 mins","6 mins","7 mins","8 mins","9 mins","10 mins","11 mins","12 mins","13 mins","14 mins","15 mins","16 mins","17 mins","18 mins","19 mins","20 mins"};
		default = profileNamespace getVariable ["ncb_param_gunshipPatrolTimerBase",300];
	};
	class ncb_param_gunshipPatrolTimerVariance : BaseClass {
		title = "Add random variance to gunship patrol time";
		values[] = {0,60,120,180,240,300,360,420,480,540,600,660,720,780,840,900,960,1020,1080,1140,1200};
		texts[] = {"no variance","up to 1 min","up to 2 mins","up to 3 mins","up to 4 mins","up to 5 mins","up to 6 mins","up to 7 mins","up to 8 mins","up to 9 mins","up to 10 mins","up to 11 mins","up to 12 mins","up to 13 mins","up to 14 mins","up to 15 mins","up to 16 mins","up to 17 mins","up to 18 mins","up to 19 mins","up to 20 mins"};
		default = profileNamespace getVariable ["ncb_param_gunshipPatrolTimerVariance",120];
	};
	class ncb_param_zoneSupportGunships : BaseClass {
		title = "AI radios nearby gunships for support";
		values[] = {0,1000,5000,10000};
		texts[] = {"Only QRF helis support enemy units","Enemy can request help from any heli within 1km","Enemy can request help from any heli within 5km","Enemy can request help from any heli within 10km"};
		default = profileNamespace getVariable ["ncb_param_zoneSupportGunships",0];
	};
	class spacer_9a : spacer_01 {};
	class spacer_9b : spacer_01 {
		title = "------------------------ mortar team ------------------------";
	};
	class spacer_9c : spacer_01 {};
	class ncb_param_zoneMortarChance : BaseClass {
		title = "Chance of spawning a mortar in zones";
		values[] = {-1,1,2,3,4,5,6,7,8,9,10};
		texts[] = {"No chance","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%"};
		default = profileNamespace getVariable ["ncb_param_zoneMortarChance",3];
		paramMultiplier = 0.1;
	};
	class ncb_param_airBaseMortarChance : ncb_param_zoneMortarChance {
		title = "Chance of spawning a mortar at airbases";
		default = profileNamespace getVariable ["ncb_param_airBaseMortarChance",3];
	};
	class ncb_param_radioTransmitterMortarChance : ncb_param_zoneMortarChance {
		title = "Chance of spawning a mortar at radio transmitters";
		default = profileNamespace getVariable ["ncb_param_radioTransmitterMortarChance",3];
	};
	class ncb_param_artilleryZoneMortarChance : ncb_param_zoneMortarChance {
		title = "Chance of spawning a mortar in artillery zones";
		default = profileNamespace getVariable ["ncb_param_artilleryZoneMortarChance",3];
	};
	class spacer_10a : spacer_01 {};
	class spacer_10b : spacer_01 {
		title = "------------------------ patrol squads ------------------------";
	};
	class spacer_10c : spacer_01 {};
	class ncb_param_zoneUAVSquadChance : BaseClass {
		title = "Chance of spawning UAV for infantry squads";
		values[] = {-1,1,2,3,4,5,6,7,8,9,10};
		texts[] = {"No chance","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%"};
		default = profileNamespace getVariable ["ncb_param_zoneUAVSquadChance",1];
		paramMultiplier = 0.1;
	};
	class spacer_11a : spacer_01 {};
	class spacer_11b : spacer_01 {
		title = "------------------------ sniper squads ------------------------";
	};
	class spacer_11c : spacer_01 {};
	class ncb_param_zoneSniperSquadChance : BaseClass {
		title = "Chance of spawning sniper squad";
		values[] = {-1,1,2,3,4,5,6,7,8,9,10};
		texts[] = {"No chance","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%"};
		default = profileNamespace getVariable ["ncb_param_zoneSniperSquadChance",3];
		paramMultiplier = 0.1;
	};
	class ncb_param_zoneSniperCountLower : BaseClass {
		title = "Min snipers per squad";
		values[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50};
		texts[] = {"1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50"};
		default = profileNamespace getVariable ["ncb_param_zoneSniperCountLower",1];
	};
	class ncb_param_zoneSniperCountUpper : ncb_param_zoneSniperCountLower {
		title = "Max snipers per squad";
		default = profileNamespace getVariable ["ncb_param_zoneSniperCountUpper",5];
	};
	class ncb_param_zoneSniperCountMid : ncb_param_zoneSniperCountLower {
		title = "Normal distribution (can be higher than max)";
		default = profileNamespace getVariable ["ncb_param_zoneSniperCountMid",5];
	};
	class ncb_param_zoneSniperMultiplier : BaseClass {
		title = "Choose density of sniper squads";
		values[] = {0,1};
		texts[] = {"One sniper squad per zone","Squads spawn per enemy patrol group"};
		default = profileNamespace getVariable ["ncb_param_zoneSniperMultiplier",0];
	};
	class ncb_param_airBaseSniperMultiplier : BaseClass {
		title = "Choose multiplier for air base zones";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30};
		texts[] = {"No sniper squads at airbases","x0.1","x0.2","x0.3","x0.4","x0.5","x0.6","x0.7","x0.8","x0.9","x1","x1.1","x1.2","x1.3","x1.4","x1.5","x1.6","x1.7","x1.8","x1.9","x2","x2.1","x2.2","x2.3","x2.4","x2.5","x2.6","x2.7","x2.8","x2.9","x3"};
		default = profileNamespace getVariable ["ncb_param_airBaseSniperMultiplier",10];
		paramMultiplier = 0.1;
	};
	class ncb_param_radioTransmitterSniperMultiplier : BaseClass {
		title = "Choose multiplier for radio transmitter zones";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30};
		texts[] = {"No sniper squads at radio transmitters","x0.1","x0.2","x0.3","x0.4","x0.5","x0.6","x0.7","x0.8","x0.9","x1","x1.1","x1.2","x1.3","x1.4","x1.5","x1.6","x1.7","x1.8","x1.9","x2","x2.1","x2.2","x2.3","x2.4","x2.5","x2.6","x2.7","x2.8","x2.9","x3"};
		default = profileNamespace getVariable ["ncb_param_radioTransmitterSniperMultiplier",10];
		paramMultiplier = 0.1;
	};
	class ncb_param_artilleryZoneSniperMultiplier : BaseClass {
		title = "Choose multiplier for artillery zones";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30};
		texts[] = {"No sniper squads at artillery zones","x0.1","x0.2","x0.3","x0.4","x0.5","x0.6","x0.7","x0.8","x0.9","x1","x1.1","x1.2","x1.3","x1.4","x1.5","x1.6","x1.7","x1.8","x1.9","x2","x2.1","x2.2","x2.3","x2.4","x2.5","x2.6","x2.7","x2.8","x2.9","x3"};
		default = profileNamespace getVariable ["ncb_param_artilleryZoneSniperMultiplier",10];
		paramMultiplier = 0.1;
	};
	class spacer_12a : spacer_01 {};
	class spacer_12b : spacer_01 {
		title = "------------------------ static gun squads ------------------------";
	};
	class spacer_12c : spacer_01 {};
	class ncb_param_zoneStaticSquadChance : BaseClass {
		title = "Chance of spawning static gun squad";
		values[] = {-1,1,2,3,4,5,6,7,8,9,10};
		texts[] = {"No chance","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%"};
		default = profileNamespace getVariable ["ncb_param_zoneStaticSquadChance",3];
		paramMultiplier = 0.1;
	};
	class ncb_param_zoneStaticCountLower : BaseClass {
		title = "Min statics per squad";
		values[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50};
		texts[] = {"1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50"};
		default = profileNamespace getVariable ["ncb_param_zoneStaticCountLower",1];
	};
	class ncb_param_zoneStaticCountUpper : BaseClass {
		title = "Max statics per squad";
		values[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50};
		texts[] = {"1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50"};
		default = profileNamespace getVariable ["ncb_param_zoneStaticCountUpper",5];
	};
	class ncb_param_zoneStaticCountMid : BaseClass {
		title = "Normal distribution (can be higher than max)";
		values[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50};
		texts[] = {"1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50"};
		default = profileNamespace getVariable ["ncb_param_zoneStaticCountMid",5];
	};
	class ncb_param_zoneStaticMultiplier : BaseClass {
		title = "Choose density of static gun squads";
		values[] = {0,1};
		texts[] = {"One static gun squad per zone","Squads spawn per enemy patrol group"};
		default = profileNamespace getVariable ["ncb_param_zoneStaticMultiplier",0];
	};
	class ncb_param_airBaseStaticMultiplier : BaseClass {
		title = "Choose multiplier for air base zones";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30};
		texts[] = {"No static squads at airbases","x0.1","x0.2","x0.3","x0.4","x0.5","x0.6","x0.7","x0.8","x0.9","x1","x1.1","x1.2","x1.3","x1.4","x1.5","x1.6","x1.7","x1.8","x1.9","x2","x2.1","x2.2","x2.3","x2.4","x2.5","x2.6","x2.7","x2.8","x2.9","x3"};
		default = profileNamespace getVariable ["ncb_param_airBaseStaticMultiplier",10];
		paramMultiplier = 0.1;
	};
	class ncb_param_radioTransmitterStaticMultiplier : BaseClass {
		title = "Choose multiplier for radio transmitter zones";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30};
		texts[] = {"No static squads at radio transmitters","x0.1","x0.2","x0.3","x0.4","x0.5","x0.6","x0.7","x0.8","x0.9","x1","x1.1","x1.2","x1.3","x1.4","x1.5","x1.6","x1.7","x1.8","x1.9","x2","x2.1","x2.2","x2.3","x2.4","x2.5","x2.6","x2.7","x2.8","x2.9","x3"};
		default = profileNamespace getVariable ["ncb_param_radioTransmitterStaticMultiplier",10];
		paramMultiplier = 0.1;
	};
	class ncb_param_artilleryZoneStaticMultiplier : BaseClass {
		title = "Choose multiplier for artillery zones";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30};
		texts[] = {"No static squads at artillery zones","x0.1","x0.2","x0.3","x0.4","x0.5","x0.6","x0.7","x0.8","x0.9","x1","x1.1","x1.2","x1.3","x1.4","x1.5","x1.6","x1.7","x1.8","x1.9","x2","x2.1","x2.2","x2.3","x2.4","x2.5","x2.6","x2.7","x2.8","x2.9","x3"};
		default = profileNamespace getVariable ["ncb_param_artilleryZoneStaticMultiplier",10];
		paramMultiplier = 0.1;
	};
	class spacer_13a : spacer_01 {};
	class spacer_13b : spacer_01 {
		title = "------------------------ road blocks ------------------------";
	};
	class spacer_13c : spacer_01 {};
	class ncb_param_roadBlocksAllowed : BaseClass {
		title = "Choose whether enemy troops man random roadblocks";
		values[] = {0,1};
		texts[] = {"No","Yes"};
		default = profileNamespace getVariable ["ncb_param_roadBlocks",1];
	};
	class ncb_param_roadBlocksCount : BaseClass {
		title = "Number of desired roadblocks per zone";
		values[] = {-1,1,2,3,4,5,6,7,8,9,10};
		texts[] = {"Same as number of patrols in zone","1 roadblock","2 roadblocks","3 roadblocks","4 roadblocks","5 roadblocks","6 roadblocks","7 roadblocks","8 roadblocks","9 roadblocks","10 roadblocks"};
		default = profileNamespace getVariable ["ncb_param_roadBlocksCount",-1];
	};
	class ncb_param_roadBlocksChance : BaseClass {
		title = "Chance of each roadblock spawning";
		values[] = {-1,1,2,3,4,5,6,7,8,9,10};
		texts[] = {"No chance","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%"};
		default = profileNamespace getVariable ["ncb_param_roadBlocksChance",10];
		paramMultiplier = 0.1;
	};
	class ncb_param_roadBlocksMinDist : BaseClass {
		title = "Minimum distance between roadblocks";
		values[] = {50,100,200,300,400,500,600,700,800,900,1000};
		texts[] = {"50m","100m","200m","300m","400m","500m","600m","700m","800m","900m","1000m"};
		default = profileNamespace getVariable ["ncb_param_roadBlocksMinDist",300];
	};
	class spacer_14a : spacer_01 {};
	class spacer_14b : spacer_01 {
		title = "------------------------ empty vehicles ------------------------";
	};
	class spacer_14c : spacer_01 {};
	class ncb_param_emptyVehicleCount : BaseClass {
		title = "Desired number of empty vehicles per zone";
		values[] = {0,1,2,3,4,5,6,7,8,9,10};
		texts[] = {"No empty vehicles","1 vehicle","2 vehicles","3 vehicles","4 vehicles","5 vehicles","6 vehicles","7 vehicles","8 vehicles","9 vehicles","10 vehicles"};
		default = profileNamespace getVariable ["ncb_param_emptyVehicleCount",10];
	};
	class ncb_param_emptyVehicleChance : BaseClass {
		title = "Chance of spawning each empty vehicle";
		values[] = {-1,1,2,3,4,5,6,7,8,9,10};
		texts[] = {"No chance","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%"};
		default = profileNamespace getVariable ["ncb_param_emptyVehicleChance",5];
		paramMultiplier = 0.1;
	};
	class ncb_param_emptyBoatCount : ncb_param_emptyVehicleCount {
		title = "Desired number of empty boats per zone";
		texts[] = {"No empty boats","1 boat","2 boats","3 boats","4 boats","5 boats","6 boats","7 boats","8 boats","9 boats","10 boats"};
		default = profileNamespace getVariable ["ncb_param_emptyBoatCount",3];
	};
	class ncb_param_emptyBoatChance : ncb_param_emptyVehicleChance {
		title = "Chance of spawning each empty boat";
		default = profileNamespace getVariable ["ncb_param_emptyBoatChance",5];
	};
	class ncb_param_emptyPlaneCount : ncb_param_emptyVehicleCount {
		title = "Desired number of empty planes per zone (depends on hangars)";
		texts[] = {"No empty planes","1 plane","2 planes","3 planes","4 planes","5 planes","6 planes","7 planes","8 planes","9 planes","10 planes"};
		default = profileNamespace getVariable ["ncb_param_emptyPlaneCount",3];
	};
	class ncb_param_emptyPlaneChance : ncb_param_emptyVehicleChance {
		title = "Chance of spawning each empty plane";
		default = profileNamespace getVariable ["ncb_param_emptyPlaneChance",1];
	};
	class spacer_15a : spacer_01 {};
	class spacer_15b : spacer_01 {
		title = "------------------------ civilians ------------------------";
	};
	class spacer_15c : spacer_01 {};
	class ncb_param_civilianEnable : BaseClass {
		title = "Enable civilians in zones";
		values[] = {0,1};
		texts[] = {"No","Yes"};
		default = profileNamespace getVariable ["ncb_param_civilianEnable",0];
		paramReplace = "[false,true]";
	};
	class spacer_15d : spacer_01 {
		title = "------------------------ startled birds ------------------------";
	};
	class spacer_15e : spacer_01 {};
	class ncb_param_startledBirdsCount : BaseClass {
		title = "Desired number of trees with easily startled birds nesting in them";
		values[] = {0,1,2,3,4,5,6,7,8,9,10};
		texts[] = {"No birds nesting in trees","1 bird nest","2 bird nests","3 bird nests","4 bird nests","5 bird nests","6 bird nests","7 bird nests","8 bird nests","9 bird nests","10 bird nests"};
		default = profileNamespace getVariable ["ncb_param_startledBirdsCount",10];
	};
	class ncb_param_startledBirdsChance : ncb_param_emptyVehicleChance {
		title = "Chance of spawning each birds nest";
		default = profileNamespace getVariable ["ncb_param_startledBirdsChance",5];
	};
	class spacer_16a : spacer_01 {};
	class spacer_17bdrg : spacer_01 {
		title = "------------------------ naval mines ------------------------";
	};
	class spacer_15cawda : spacer_01 {};
	class ncb_param_navalMines : BaseClass {
		title = "Set naval mine density";
		values[] = {0,1,2,3,4,5,6,7,8,9,10};
		texts[] = {"None","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%"};
		default = profileNamespace getVariable ["ncb_param_navalMines",0];
		paramMultiplier = 0.1;
		publicClass = 0;
	};
	class ncb_param_persistentNavalMines : BaseClass {
		title = "Set naval mine persistence";
		values[] = {0,1};
		texts[] = {"Mines will replenish when zone spawns","Mines do not replenish if detonated"};
		default = profileNamespace getVariable ["ncb_param_persistentNavalMines",0];
		paramReplace = "[false,true]";
		publicClass = 0;
	};
	class spacer_16seffa : spacer_01 {};
	class spacer_16b : spacer_01 {
		title = "------------------------ GARBAGE OPTIONS ------------------------";
	};
	class spacer_16c : spacer_01 {};
	class ncb_param_removeDeadTimeout : BaseClass  {
		title = "Dead body and destroyed vehicle timeout";
		values[] = {60,120,300,600,900,1200,1500,1800,2400,3000,3600};
		texts[] = {"1 minute","2 minutes","5 minutes","10 minutes","15 minutes","20 minutes","25 minutes","30 minutes","40 minutes","50 minutes","60 minutes"};
		default = profileNamespace getVariable ["ncb_param_removeDeadTimeout",600];
	};
	class ncb_param_removeDeadPlayerTimeout : ncb_param_removeDeadTimeout  {
		title = "Dead body timeout for players";
		default = profileNamespace getVariable ["ncb_param_removeDeadPlayerTimeout",600];
	};
	class ncb_param_deadObjectLimit : BaseClass {
		title = "Dead body and destroyed vehicle limit";
		values[] = {10,20,30,40,50,60,70,80,90,100};
		texts[] = {"10","20","30","40","50","60","70","80","90","100"};
		default = profileNamespace getVariable ["ncb_param_deadObjectLimit",50];
	};
	class ncb_param_removeAbandonedVehicleTimeout : BaseClass {
		title = "Abandoned vehicle timeout";
		values[] = {60,120,300,600,900,1200,1500,1800,2400,3000,3600};
		texts[] = {"1 minute","2 minutes","5 minutes","10 minutes","15 minutes","20 minutes","25 minutes","30 minutes","40 minutes","50 minutes","60 minutes"};
		default = profileNamespace getVariable ["ncb_param_removeAbandonedVehicleTimeout",1200];
	};
	class ncb_param_removeAbandonedBoatTimeout : ncb_param_removeAbandonedVehicleTimeout {
		title = "Abandoned boat timeout";
		values[] = {60,120,300,600,900,1200,1500,1800,2400,3000,3600};
		texts[] = {"1 minute","2 minutes","5 minutes","10 minutes","15 minutes","20 minutes","25 minutes","30 minutes","40 minutes","50 minutes","60 minutes"};
		default = profileNamespace getVariable ["ncb_param_removeAbandonedBoatTimeout",300];
	};
	class spacer_17a : spacer_01 {};
	class spacer_17b : spacer_01 {
		title = "------------------------ RENEGADE OPTIONS ------------------------";
	};
	class spacer_17c : spacer_01 {};
	class ncb_param_renegadeFrequency : BaseClass {
		title = "Renegade spawn frequency";
		values[] = {1,2,4,6,8,10,12,14,16,18,20};
		texts[] = {"30 secs to 1 minute","1 - 2 minutes","2 - 4 minutes","3 - 6 minutes","4 - 8 minutes","5 - 10 minutes","6 - 12 minutes","7 - 14 minutes","8 - 16 minutes","9 - 18 minutes","10 - 20 minutes"};
		default = profileNamespace getVariable ["ncb_param_renegadeFrequency",10];
	};
	class ncb_param_renPrimaryWeaponChance : ncb_param_aiPrimaryWeaponChance {
		title = "Chance of renegade units carrrying a primary weapon";
		default = profileNamespace getVariable ["ncb_param_renPrimaryWeaponChance",100];
	};
	class ncb_param_renSecondaryWeaponChance : ncb_param_aiPrimaryWeaponChance {
		title = "Chance of renegade units carrrying a launcher";
		default = profileNamespace getVariable ["ncb_param_renSecondaryWeaponChance",20];
	};
	class ncb_param_renHandgunWeaponChance : ncb_param_aiPrimaryWeaponChance {
		title = "Chance of renegade units carrrying a handgun";
		default = profileNamespace getVariable ["ncb_param_renHandgunWeaponChance",-10];
	};
	class ncb_param_renMinWeaponTier : ncb_param_enemyUnitMinWeaponTier {
		title = "Renegade minimum weapon tier";
		default = profileNamespace getVariable ["ncb_param_renMinWeaponTier",0];
	};
	class ncb_param_renMidWeaponTier : ncb_param_enemyUnitMidWeaponTier {
		title = "Renegade mid weapon tier";
		default = profileNamespace getVariable ["ncb_param_renMidWeaponTier",1];
	};
	class ncb_param_renMaxWeaponTier : ncb_param_enemyUnitMinWeaponTier {
		title = "Renegade maximum weapon tier";
		default = profileNamespace getVariable ["ncb_param_renMaxWeaponTier",2];
	};
	class ncb_param_renMinLauncherTier : ncb_param_enemyUnitMinLauncherTier {
		title = "Renegade minimum launcher tier";
		default = profileNamespace getVariable ["ncb_param_renMinLauncherTier",0];
	};
	class ncb_param_renMidLauncherTier : ncb_param_enemyUnitMidLauncherTier {
		title = "Renegade mid launcher tier";
		default = profileNamespace getVariable ["ncb_param_renMidLauncherTier",1];
	};
	class ncb_param_renMaxLauncherTier : ncb_param_enemyUnitMinLauncherTier {
		title = "Renegade maximum launcher tier";
		default = profileNamespace getVariable ["ncb_param_renMaxLauncherTier",2];
	};
	// always have this last!
	class ncb_param_loadedParams : BaseClass {
		title = "End Params";
		values[] = {1};
		texts[] = {"true"};
		default = profileNamespace getVariable ["ncb_param_loadedParams",1];
	};
};

class CfgFunctions {
	#include "vip_cmn\fn\vip_cmn_fnc.hpp"
	#include "vip_lit\fn\vip_lit_fnc.hpp"
	class llw {
		class Weather {
			class getDateTime {
				file = "common\llw\getDateTime.sqf";
			};
			class getSunAngle {
				file = "common\llw\getSunAngle.sqf";
			};
			class getSunElevationNoon {
				file = "common\llw\getSunElevationNoon.sqf";
			};
			class getSunRadiation {
				file = "common\llw\getSunRadiation.sqf";
			};
			class getSunrise {
				file = "common\llw\getSunrise.sqf";
			};
			class getTemperature {
				file = "common\llw\getTemperature.sqf";
			};
			class inShadow {
				file = "common\llw\inShadow.sqf";
			};
		};
	};
	class horde {
		class test {
			class artySalvo {
				file = "misc\artySalvo.sqf";
			};
			class cas {
				file = "misc\cas.sqf";
			};
			class casAttackRun {
				file = "misc\casAttackRun.sqf";
			};
			class casRemoteControlServer {
				file = "misc\casRemoteControlServer.sqf";
			};
			class casRemoteControlClient {
				file = "misc\casRemoteControlClient.sqf";
			};
			class casAddPlayerRemoteControl {
				file = "misc\casAddPlayerRemoteControl.sqf";
			};
			class casReadDocs {
				file = "misc\casReadDocs.sqf";
			};
			class casSpawnDrone {
				file = "misc\casSpawnDrone.sqf";
			};
			class EGSpectator {
				file = "misc\EGSpectator.sqf";
			};
			class editorVehsInit {
				file = "misc\editorVehsInit.sqf";
			};
			class everyWeapon {
				file = "misc\everyWeapon.sqf";
			};
			class freeHostage {
				file = "misc\freeHostage.sqf";
			};
			class fuseSetting {
				file = "misc\fuseSetting.sqf";
			};
			class waypointFinder {
				file = "misc\waypointFinder.sqf";
			};
			class redirectClientToServer {
				file = "misc\redirectClientToServer.sqf";
			};
			class rotateObject {
				file = "misc\rotateObject.sqf";
			};
			class sideMissionManager {
				file = "server\tasks\sideMissions\sideMissionManager.sqf";
			};
			class sideMissionAssassination {
				file = "server\tasks\sideMissions\objectives\sideMissionAssassination.sqf";
			};
			class sideMissionDestroyAA {
				file = "server\tasks\sideMissions\objectives\sideMissionDestroyAA.sqf";
			};
			class sideMissionDestroyArmouredColumn {
				file = "server\tasks\sideMissions\objectives\sideMissionDestroyArmouredColumn.sqf";
			};
			class sideMissionDestroyConvoy {
				file = "server\tasks\sideMissions\objectives\sideMissionDestroyConvoy.sqf";
			};
			class sideMissionRescueHostages {
				file = "server\tasks\sideMissions\objectives\sideMissionRescueHostages.sqf";
			};
			class sideMissionDestroyConvoyBoat {
				file = "server\tasks\sideMissions\objectives\sideMissionDestroyConvoyBoat.sqf";
			};
			class sideMissionHumanBomb {
				file = "server\tasks\sideMissions\objectives\sideMissionHumanBomb.sqf";
			};
			class taskPatrol {
				file = "misc\taskPatrol.sqf";
			};
			class cannotMove {
				file = "misc\cannotMove.sqf";
			};
		};
		class Client {

			// init

			class clientPreInit {
				file = "client\init\clientPreInit.sqf";
				preInit = 1;
			};
			class clientPostInit {
				file = "client\init\clientPostInit.sqf";
				postInit = 1;
			};


			// environment

			class antiGetOutCheat {
				file = "client\environment\antiGetOutCheat.sqf";
			};
			class birdWaypoints {
				file = "client\environment\birdWaypoints.sqf";
			};
			class blowUpFurniture {
				file = "client\environment\blowUpFurniture.sqf";
			};
			class broadcastSwitchMoveInRange {
				file = "client\environment\broadcastSwitchMoveInRange.sqf";
			};
			class clientLightning {
				file = "client\environment\clientLightning.sqf";
			};
			class earthquake {
				file = "client\environment\earthquake.sqf";
			};
			class renderLootHolders {
				file = "client\environment\renderLootHolders.sqf";
			};
			class startledBirds {
				file = "client\environment\startledBirds.sqf";
			};
			class timedParticleEffect {
				file = "client\environment\timedParticleEffect.sqf";
			};
			class timedParticleEffects {
				file = "client\environment\timedParticleEffects.sqf";
			};
			class vehDamageParticleEffects {
				file = "client\environment\vehDamageParticleEffects.sqf";
			};

			// EH

			class launcherFired {
				file = "client\eventhandlers\launcherFired.sqf";
			};
			class playerHandleDamage {
				file = "client\eventhandlers\playerHandleDamage.sqf";
			};
			class playerPut {
				file = "client\eventhandlers\playerPut.sqf";
			};
			class playerTake {
				file = "client\eventhandlers\playerTake.sqf";
			};

			// interact

			// charges

			class intersectionData {
				file = "client\interact\charges\intersectionData.sqf";
			};
			class placeCharge {
				file = "client\interact\charges\placeCharge.sqf";
			};

			// actions

			class adminShutDown {
				file = "client\interact\general\action\adminShutDown.sqf";
			};
			class attachLight {
				file = "client\interact\general\action\attachLight.sqf";
			};
			class boatPush {
				file = "client\interact\general\action\boatPush.sqf";
			};
			class bargateClose {
				file = "client\interact\general\action\bargateClose.sqf";
			};
			class bargateOpen {
				file = "client\interact\general\action\bargateOpen.sqf";
			};
			class cutFence {
				file = "client\interact\general\action\cutFence.sqf";
			};
			class disassembleGenerator {
				file = "client\interact\general\action\disassembleGenerator.sqf";
			};
			class disassembleParaBeacon {
				file = "client\interact\general\action\disassembleParaBeacon.sqf";
			};
			class drinkFromSource {
				file = "client\interact\general\action\drinkFromSource.sqf";
			};
			class dropLight {
				file = "client\interact\general\action\dropLight.sqf";
			};
			class extinguishFire {
				file = "client\interact\general\action\extinguishFire.sqf";
			};
			class extinguishLight {
				file = "client\interact\general\action\extinguishLight.sqf";
			};
			class fillCanteens {
				file = "client\interact\general\action\fillCanteens.sqf";
			};
			class fillJerryCan {
				file = "client\interact\general\action\fillJerryCan.sqf";
			};
			class getInGunner {
				file = "client\interact\general\action\getInGunner.sqf";
			};
			class gutAnimal {
				file = "client\interact\general\action\gutAnimal.sqf";
			};
			class harvest {
				file = "client\interact\general\action\harvest.sqf";
			};
			class hideBody {
				file = "client\interact\general\action\hideBody.sqf";
			};
			class hideFire {
				file = "client\interact\general\action\hideFire.sqf";
			};
			class lightFire {
				file = "client\interact\general\action\lightFire.sqf";
			};
			class opBandage {
				file = "client\interact\general\action\opBandage.sqf";
			};
			class opBandageSetup {
				file = "client\interact\general\action\opBandageSetup.sqf";
			};
			class opBloodBag {
				file = "client\interact\general\action\opBloodBag.sqf";
			};
			class opBloodBagComplete {
				file = "client\interact\general\action\opBloodBagComplete.sqf";
			};
			class opFirstAid {
				file = "client\interact\general\action\opFirstAid.sqf";
			};
			class opFirstAidComplete {
				file = "client\interact\general\action\opFirstAidComplete.sqf";
			};
			class opMedigel {
				file = "client\interact\general\action\opMedigel.sqf";
			};
			class opRemoveBullets {
				file = "client\interact\general\action\opRemoveBullets.sqf";
			};
			class opRemoveBulletsSetup {
				file = "client\interact\general\action\opRemoveBulletsSetup.sqf";
			};
			class opJoinGroup {
				file = "client\interact\general\action\opJoinGroup.sqf";
			};
			class opLeaveGroup {
				file = "client\interact\general\action\opLeaveGroup.sqf";
			};
			class opOpenInventory {
				file = "client\interact\general\action\opOpenInventory.sqf";
			};
			class opRevive {
				file = "client\interact\general\action\opRevive.sqf";
			};
			class opReviveComplete {
				file = "client\interact\general\action\opReviveComplete.sqf";
			};
			class packCamoNet {
				file = "client\interact\general\action\packCamoNet.sqf";
			};
			class packTent {
				file = "client\interact\general\action\packTent.sqf";
			};
			class playerConfirmKills {
				file = "client\interact\general\action\playerConfirmKills.sqf";
			};
			class playerLogOut {
				file = "client\interact\general\action\playerLogOut.sqf";
			};
			class raiseJollyRoger {
				file = "client\interact\general\action\raiseJollyRoger.sqf";
			};
			class ropePickUp {
				file = "client\interact\general\action\ropePickUp.sqf";
			};
			class salvageWreck {
				file = "client\interact\general\action\salvageWreck.sqf";
			};
			class staticWeaponDisassemble {
				file = "client\interact\general\action\staticWeaponDisassemble.sqf";
			};
			class staticWeaponDrag {
				file = "client\interact\general\action\staticWeaponDrag.sqf";
			};
			class staticWeaponRotate {
				file = "client\interact\general\action\staticWeaponRotate.sqf";
			};
			class swapLight {
				file = "client\interact\general\action\swapLight.sqf";
			};
			class switchGeneratorOff {
				file = "client\interact\general\action\switchGeneratorOff.sqf";
			};
			class switchGeneratorOn {
				file = "client\interact\general\action\switchGeneratorOn.sqf";
			};

			// dialog

			class setupGeneralMenuDlg {
				file = "client\interact\general\dialog\setupGeneralMenuDlg.sqf";
			};

			// system

			class abortDrag {
				file = "client\interact\system\abortDrag.sqf";
			};
			class abortInteraction {
				file = "client\interact\system\abortInteraction.sqf";
			};
			class ctrlSetScale {
				file = "client\interact\system\ctrlSetScale.sqf";
			};
			class factorSkillTime {
				file = "client\interact\system\factorSkillTime.sqf";
			};
			class hasRightMagsForAction {
				file = "client\interact\system\hasRightMagsForAction.sqf";
			};
			class returnNearestHolder {
				file = "client\interact\system\returnNearestHolder.sqf";
			};
			class setHolderOnFloor {
				file = "client\interact\system\setHolderOnFloor.sqf";
			};
			class keyPressed {
				file = "client\interact\system\keyPressed.sqf";
			};
			class selectInteractionMenu {
				file = "client\interact\system\selectInteractionMenu.sqf";
			};
			class selectReviveAnim {
				file = "client\interact\system\selectReviveAnim.sqf";
			};
			class setTooltip {
				file = "client\interact\system\setTooltip.sqf";
			};
			class spawnActionItems {
				file = "client\interact\system\spawnActionItems.sqf";
			};
			class spawnInteractionHelper {
				file = "client\interact\system\spawnInteractionHelper.sqf";
			};
			class testInteractionConditions {
				file = "client\interact\system\testInteractionConditions.sqf";
			};
			class updateFuelSkill {
				file = "client\interact\system\updateFuelSkill.sqf";
			};
			class updateVehicleSkill {
				file = "client\interact\system\updateVehicleSkill.sqf";
			};

			// vehicle general

			//action

			class addFuelToTank {
				file = "client\interact\vehicle_general\action\addFuelToTank.sqf";
			};
			class addVehiclePart {
				file = "client\interact\vehicle_general\action\addVehiclePart.sqf";
			};
			class animLoopVehicleRepair {
				file = "client\interact\vehicle_general\action\animLoopVehicleRepair.sqf";
			};
			class checkInteractionValid {
				file = "client\interact\vehicle_general\action\checkInteractionValid.sqf";
			};
			class fitVehiclePart {
				file = "client\interact\vehicle_general\action\fitVehiclePart.sqf";
			};
			class loadVehicleCargo {
				file = "client\interact\vehicle_general\action\loadVehicleCargo.sqf";
			};
			class repairVehicleWeapon {
				file = "client\interact\vehicle_general\action\repairVehicleWeapon.sqf";
			};
			class swapVehiclePart {
				file = "client\interact\vehicle_general\action\swapVehiclePart.sqf";
			};
			class syphonFuelFromTank {
				file = "client\interact\vehicle_general\action\syphonFuelFromTank.sqf";
			};
			class takeVehiclePart {
				file = "client\interact\vehicle_general\action\takeVehiclePart.sqf";
			};
			class unloadVehicleCargo {
				file = "client\interact\vehicle_general\action\unloadVehicleCargo.sqf";
			};

			// dialog
			class realDamToRepairHealth {
				file = "client\interact\vehicle_general\dialog\realDamToRepairHealth.sqf";
			};
			class repairHealthToRealDam {
				file = "client\interact\vehicle_general\dialog\repairHealthToRealDam.sqf";
			};
			class resetVehicleMainMenuDlg {
				file = "client\interact\vehicle_general\dialog\resetVehicleMainMenuDlg.sqf";
			};
			class setVehicleCargoDlg {
				file = "client\interact\vehicle_general\dialog\setVehicleCargoDlg.sqf";
			};
			class setVehicleFuelDlg {
				file = "client\interact\vehicle_general\dialog\setVehicleFuelDlg.sqf";
			};
			class setVehicleRepairDlg {
				file = "client\interact\vehicle_general\dialog\setVehicleRepairDlg.sqf";
			};
			class setVehicleRepairWeaponDlg {
				file = "client\interact\vehicle_general\dialog\setVehicleRepairWeaponDlg.sqf";
			};
			class setupVehicleMainMenuDlg {
				file = "client\interact\vehicle_general\dialog\setupVehicleMainMenuDlg.sqf";
			};

			// vehicle refit

			// action

			class addWeaponToVehicle {
				file = "client\interact\vehicle_refit\action\addWeaponToVehicle.sqf";
			};
			class rotDlgObject {
				file = "client\interact\vehicle_refit\action\rotDlgObject.sqf";
			};

			// dialog

			class resetVehicleAddWeaponMainMenuDlg {
				file = "client\interact\vehicle_refit\dialog\resetVehicleAddWeaponMainMenuDlg.sqf";
			};
			class setVehicleAddWeaponDlg {
				file = "client\interact\vehicle_refit\dialog\setVehicleAddWeaponDlg.sqf";
			};
			class setupVehicleAddWeaponMainMenuDlg {
				file = "client\interact\vehicle_refit\dialog\setupVehicleAddWeaponMainMenuDlg.sqf";
			};

			// inventory

			// enigma

			class decrypt {
				file = "client\inventory\enigma\decrypt.sqf";
			};

			// radio

			class setupDynamicGroupsMenu {
				file = "client\inventory\radio\setupDynamicGroupsMenu.sqf";
			};

			// actions

			class buildFire {
				file = "client\inventory\actions\buildFire.sqf";
			};
			class drinkCan {
				file = "client\inventory\actions\drinkCan.sqf";
			};
			class drinkCanteen {
				file = "client\inventory\actions\drinkCanteen.sqf";
			};
			class dropAttachedAmmo {
				file = "client\inventory\actions\dropAttachedAmmo.sqf";
			};
			class eatFood {
				file = "client\inventory\actions\eatFood.sqf";
			};
			class emptyBackpack {
				file = "client\inventory\actions\emptyBackpack.sqf";
			};
			class emptyUniform {
				file = "client\inventory\actions\emptyUniform.sqf";
			};
			class emptyVest {
				file = "client\inventory\actions\emptyVest.sqf";
			};
			class fillCanteen {
				file = "client\inventory\actions\fillCanteen.sqf";
			};
			class packDiffType {
				file = "client\inventory\actions\packDiffType.sqf";
			};
			class packSameType {
				file = "client\inventory\actions\packSameType.sqf";
			};
			class pitchCamoNet {
				file = "client\inventory\actions\pitchCamoNet.sqf";
			};
			class pitchTent {
				file = "client\inventory\actions\pitchTent.sqf";
			};
			class ropeUnpackDrop {
				file = "client\inventory\actions\ropeUnpackDrop.sqf";
			};
			class ropeUnpackHold {
				file = "client\inventory\actions\ropeUnpackHold.sqf";
			};
			class selectCharge {
				file = "client\inventory\actions\selectCharge.sqf";
			};
			class selfBloodBag {
				file = "client\inventory\actions\selfBloodBag.sqf";
			};
			class selfRemoveBullet {
				file = "client\inventory\actions\selfRemoveBullet.sqf";
			};
			class unpackParaBeacon {
				file = "client\inventory\actions\unpackParaBeacon.sqf";
			};
			class useBandage {
				file = "client\inventory\actions\useBandage.sqf";
			};
			class useMedigel {
				file = "client\inventory\actions\useMedigel.sqf";
			};
			class useMedPack {
				file = "client\inventory\actions\useMedPack.sqf";
			};
			class useSodiumPentathol {
				file = "client\inventory\actions\useSodiumPentathol.sqf";
			};
			class useTruckerPills {
				file = "client\inventory\actions\useTruckerPills.sqf";
			};

			// system

			class abortAction {
				file = "client\inventory\system\abortAction.sqf";
			};
			class backpackSlotSelected {
				file = "client\inventory\system\backpackSlotSelected.sqf";
			};
			class weaponSlotSelected {
				file = "client\inventory\system\weaponSlotSelected.sqf";
			};
			class closeItemMenu {
				file = "client\inventory\system\closeItemMenu.sqf";
			};
			class displayActionConfMessage {
				file = "client\inventory\system\displayActionConfMessage.sqf";
			};
			class displayActionRejMessage {
				file = "client\inventory\system\displayActionRejMessage.sqf";
			};
			class displayActionSkillMessage {
				file = "client\inventory\system\displayActionSkillMessage.sqf";
			};
			class inventoryItemSelected {
				file = "client\inventory\system\inventoryItemSelected.sqf";
			};
			class resetAnims {
				file = "client\inventory\system\resetAnims.sqf";
			};
			class selectActionAnim {
				file = "client\inventory\system\selectActionAnim.sqf";
			};
			class uniformSlotSelected {
				file = "client\inventory\system\uniformSlotSelected.sqf";
			};
			class updateLogisticsSkill {
				file = "client\inventory\system\updateLogisticsSkill.sqf";
			};
			class watchSlotSelected {
				file = "client\inventory\system\watchSlotSelected.sqf";
			};
			class vestSlotSelected {
				file = "client\inventory\system\vestSlotSelected.sqf";
			};

			// system

			class playerMonitor {
				file = "client\system\playerMonitor.sqf";
			};
			class playerSetNeeds {
				file = "client\system\playerSetNeeds.sqf";
			};
			class playerSetBleeding {
				file = "client\system\playerSetBleeding.sqf";
			};
			class rotateTentCam {
				file = "client\system\rotateTentCam.sqf";
			};

			// sound

			class broadcastActionSound {
				file = "client\sound\broadcastActionSound.sqf";
			};
			class playSingleSound {
				file = "client\sound\playSingleSound.sqf";
			};

			// reloadMenu

			class reloadMenu {
				file = "client\reloadMenu\reloadMenu.sqf";
			};
			class reloadMenuDragDropped {
				file = "client\reloadMenu\reloadMenuDragDropped.sqf";
			};
			class reloadMenuDragStarted {
				file = "client\reloadMenu\reloadMenuDragStarted.sqf";
			};
			class reloadMenuUpdateVehMags {
				file = "client\reloadMenu\reloadMenuUpdateVehMags.sqf";
			};

			//respawn

			// dialog

			class openRespawnMenu {
				file = "client\respawn\dialog\openRespawnMenu.sqf";
			};
			class respawnMapClicked {
				file = "client\respawn\dialog\respawnMapClicked.sqf";
			};
			class respawnMenuMapControl {
				file = "client\respawn\dialog\respawnMenuMapControl.sqf";
			};
			class respawnMenuMapMarkerManager {
				file = "client\respawn\dialog\respawnMenuMapMarkerManager.sqf";
			};

			// system
			class playerDownIcon {
				file = "client\respawn\system\playerDownIcon.sqf";
			};
			class playerKilled {
				file = "client\respawn\system\playerKilled.sqf";
			};
			class reviveBleedoutTimer {
				file = "client\respawn\system\reviveBleedoutTimer.sqf";
			};
			class selectRespawnPos {
				file = "client\respawn\system\selectRespawnPos.sqf";
			};

			// persistence

			class getPlayerStats {
				file = "client\persistence\getPlayerStats.sqf";
			};

			// tents

			class playerAddGroupTentMarkers {
				file = "client\tents\playerAddGroupTentMarkers.sqf";
			};
			class playerAddTentMarker {
				file = "client\tents\playerAddTentMarker.sqf";
			};
			class playerRemoveNonGroupTentMarkers {
				file = "client\tents\playerRemoveNonGroupTentMarkers.sqf";
			};
			class playerRemoveTentMarker {
				file = "client\tents\playerRemoveTentMarker.sqf";
			};
		};
		class Common {

			// init

			class commonInit {
				file = "common\init\commonInit.sqf";
			};

			// commands (global versions of scripting commands - they check locally)

			class addMagazineGlobal {
				file = "common\commands\addMagazineGlobal.sqf";
			};
			class addMagazineTurretGlobal {
				file = "common\commands\addMagazineTurretGlobal.sqf";
			};
			class addWeaponGlobal {
				file = "common\commands\addWeaponGlobal.sqf";
			};
			class allowDamageGlobal {
				file = "common\commands\allowDamageGlobal.sqf";
			};
			class deleteGroupGlobal {
				file = "common\commands\deleteGroupGlobal.sqf";
			};
			class enableSimulationGlobal {
				file = "common\commands\enableSimulationGlobal.sqf";
			};
			class joinSilentGlobal {
				file = "common\commands\joinSilentGlobal.sqf";
			};
			class lockCargoGlobal {
				file = "common\commands\lockCargoGlobal.sqf";
			};
			class playMoveNowGlobal {
				file = "common\commands\playMoveNowGlobal.sqf";
			};
			class removeMagazineTurretGlobal {
				file = "common\commands\removeMagazineTurretGlobal.sqf";
			};
			class selectLeaderGlobal {
				file = "common\commands\selectLeaderGlobal.sqf";
			};
			class setAmmoGlobal {
				file = "common\commands\setAmmoGlobal.sqf";
			};
			class setFlagTextureGlobal {
				file = "common\commands\setFlagTextureGlobal.sqf";
			};
			class setFuelGlobal {
				file = "common\commands\setFuelGlobal.sqf";
			};
			class setHitPointDamageGlobal {
				file = "common\commands\setHitPointDamageGlobal.sqf";
			};
			class setUnitRatingGlobal {
				file = "common\commands\setUnitRatingGlobal.sqf";
			};
			class setVectorDirAndUpGlobal {
				file = "common\commands\setVectorDirAndUpGlobal.sqf";
			};
			class setVehicleAmmoGlobal {
				file = "common\commands\setVehicleAmmoGlobal.sqf";
			};
			class setVelocityGlobal {
				file = "common\commands\setVelocityGlobal.sqf";
			};
			class switchMoveGlobal {
				file = "common\commands\switchMoveGlobal.sqf";
			};

			// eachframe

			class addEachFrame {
				file = "common\eachframe\addEachFrame.sqf";
			};
			class eachFrameRepeat {
				file = "common\eachframe\eachFrameRepeat.sqf";
			};
			class removeEachFrame {
				file = "common\eachframe\removeEachFrame.sqf";
			};
			class getEachFrameArgs {
				file = "common\eachframe\getEachFrameArgs.sqf";
			};
			class updateEachFrame {
				file = "common\eachframe\updateEachFrame.sqf";
			};
			class updateEachFrameArgs {
				file = "common\eachframe\updateEachFrameArgs.sqf";
			};
			class updateEachFrameData {
				file = "common\eachframe\updateEachFrameData.sqf";
			};
			class iterateArrayEachFrame {
				file = "common\eachframe\iterateArrayEachFrame.sqf";
			};

			// general

			class addIcon {
				file = "common\general\addIcon.sqf";
			};
			class addWeaponsWithItems {
				file = "common\general\addWeaponsWithItems.sqf";
			};
			class allPlayersInRange {
				file = "common\general\allPlayersInRange.sqf";
			};
			class deleteTestObj {
				file = "common\general\deleteTestObj.sqf";
			};
			class drawIcon {
				file = "common\general\drawIcon.sqf";
			};
			class dumpInfo {
				file = "common\general\dumpInfo.sqf";
			};
			class fillCargo {
				file = "common\general\fillCargo.sqf";
			};
			class findBareWeaponClass {
				file = "common\general\findBareWeaponClass.sqf";
			};
			class firedNearMortar {
				file = "common\general\firedNearMortar.sqf";
			};
			class getPlayerDetails {
				file = "common\general\getPlayerDetails.sqf";
			};
			class getHighestBuildingPos {
				file = "common\general\getHighestBuildingPos.sqf";
			};
			class gotFlatTyre {
				file = "common\general\gotFlatTyre.sqf";
			};
			class isUnitSwimming {
				file = "common\general\isUnitSwimming.sqf";
			};
			class isPosInEnterableBuilding {
				file = "common\general\isPosInEnterableBuilding.sqf";
			};
			class playerIsNear {
				file = "common\general\playerIsNear.sqf";
			};
			class selectEngineSmoke {
				file = "common\general\selectEngineSmoke.sqf";
			};
			class setupDisabledAI {
				file = "common\general\setupDisabledAI.sqf";
			};
			class totalContents {
				file = "common\general\totalContents.sqf";
			};
			class typeText2 {
				file = "common\general\typeText2.sqf";
			};
			class vehicleDamageAnims {
				file = "common\general\vehicleDamageAnims.sqf";
			};
			class vehicleDamaged {
				file = "common\general\vehicleDamaged.sqf";
			};

			// doors

			class canOpenDoor {
				file = "common\doors\canOpenDoor.sqf";
			};
			class doorLocked {
				file = "common\doors\doorLocked.sqf";
			};
			class doorClose {
				file = "common\doors\doorClose.sqf";
			};
			class doorOpen {
				file = "common\doors\doorOpen.sqf";
			};
			class doorNoHandleClose {
				file = "common\doors\doorNoHandleClose.sqf";
			};
			class doorNoHandleOpen {
				file = "common\doors\doorNoHandleOpen.sqf";
			};
			class twoWingDoorNoHandleClose {
				file = "common\doors\twoWingDoorNoHandleClose.sqf";
			};
			class twoWingDoorNoHandleOpen {
				file = "common\doors\twoWingDoorNoHandleOpen.sqf";
			};
			class twoWingDoorOneHandleClose {
				file = "common\doors\twoWingDoorOneHandleClose.sqf";
			};
			class twoWingDoorOneHandleOpen {
				file = "common\doors\twoWingDoorOneHandleOpen.sqf";
			};
			class twoWingDoorTwoHandleClose {
				file = "common\doors\twoWingDoorTwoHandleClose.sqf";
			};
			class twoWingDoorTwoHandleOpen {
				file = "common\doors\twoWingDoorTwoHandleOpen.sqf";
			};
			class twoWingSlideDoorClose {
				file = "common\doors\twoWingSlideDoorClose.sqf";
			};
			class twoWingSlideDoorOpen {
				file = "common\doors\twoWingSlideDoorOpen.sqf";
			};

			// reloadMenu
			class reloadMenuAddMagazinesTurret {
				file = "common\reloadMenu\reloadMenuAddMagazinesTurret.sqf";
			};
			class reloadMenuRemoveMagazinesTurret {
				file = "common\reloadMenu\reloadMenuRemoveMagazinesTurret.sqf";
			};
			class reloadMenuUpdateMagazinesTurret {
				file = "common\reloadMenu\reloadMenuUpdateMagazinesTurret.sqf";
			};
		};
		class Server {

			// init

			class initPlayerOnServer {
				file = "server\init\initPlayerOnServer.sqf";
			};

			class serverPreInit {
				file = "server\init\serverPreInit.sqf";
				preInit = 1;
			};

			class serverPostInit {
				file = "server\init\serverPostInit.sqf";
				postInit = 1;
			};
			class addBuildingDamageHandler {
				file = "server\init\addBuildingDamageHandler.sqf";
			};

			// ai

			class addExtraVehicleMags {
				file = "server\ai\addExtraVehicleMags.sqf";
			};
			class autoReloadVehWeap {
				file = "server\ai\autoReloadVehWeap.sqf";
			};
			class cargoTurrets {
				file = "server\ai\cargoTurrets.sqf";
			};
			class getInVehicle {
				file = "server\ai\getInVehicle.sqf";
			};
			class getOutVehicle {
				file = "server\ai\getOutVehicle.sqf";
			};
			class handleDamageAIBoat {
				file = "server\ai\handleDamageAIBoat.sqf";
			};
			class handleDamageAIHeli {
				file = "server\ai\handleDamageAIHeli.sqf";
			};
			class unitHit {
				file = "server\ai\unitHit.sqf";
			};
			class unitKilled {
				file = "server\ai\unitKilled.sqf";
			};
			class unitTake {
				file = "server\ai\unitTake.sqf";
			};
			class vehicleKilled {
				file = "server\ai\vehicleKilled.sqf";
			};

			// cargo

			class serverLoadCargo {
				file = "server\cargo\serverLoadCargo.sqf";
			};
			class serverUnloadCargo {
				file = "server\cargo\serverUnloadCargo.sqf";
			};

			// garbage

			class deletePlayerTimeout {
				file = "server\garbage\deletePlayerTimeout.sqf";
			};
			class serverAddToGarbage {
				file = "server\garbage\serverAddToGarbage.sqf";
			};

			// government

			class patrolHeliLanded {
				file = "server\government\air_patrol\patrolHeliLanded.sqf";
			};

			// weather

			class setNewWeather {
				file = "server\weather\setNewWeather.sqf";
			};

			// zones

			// manager

			class addNewUnitToPool {
				file = "server\zones\manager\addNewUnitToPool.sqf";
			};
			class civilianVariables {
				file = "server\zones\manager\civilianVariables.sqf";
			};
			class selectFreeHeadlessClientOwner {
				file = "server\zones\manager\selectFreeHeadlessClientOwner.sqf";
			};
			class unitPoolManager {
				file = "server\zones\manager\unitPoolManager.sqf";
			};

			// spawn

			class spawnVehicle {
				file = "server\zones\spawn\spawnVehicle.sqf";
			};
			class enemyEquip {
				file = "server\zones\spawn\enemyEquip.sqf";
			};
			class enemyCopyEquip {
				file = "server\zones\spawn\enemyCopyEquip.sqf";
			};

			// cache

			class cacheGroup {
				file = "server\zones\cache\cacheGroup.sqf";
			};

			// empty vehicles

			class despawnEmptyVehicles {
				file = "server\zones\emptyVehicles\despawnEmptyVehicles.sqf";
			};
			class setOldVehicleTexture {
				file = "server\zones\emptyVehicles\setOldVehicleTexture.sqf";
			};

			// air reinforce

			class gunshipRTB {
				file = "server\zones\reinforce\air\gunshipRTB.sqf";
			};
			class aerInsParadrop {
				file = "server\zones\reinforce\air\aerInsParadrop.sqf";
			};
			class cacheHeli {
				file = "server\zones\reinforce\air\cacheHeli.sqf";
			};

			// sea reinforce

			// nothing!

			// waypoints

			class addWaypoint {
				file = "server\zones\waypoints\addWaypoint.sqf";
			};
			class getLeaderTargets {
				file = "server\zones\waypoints\getLeaderTargets.sqf";
			};
			class getZoneTargets {
				file = "server\zones\waypoints\getZoneTargets.sqf";
			};
			class setupGroupWaypoints {
				file = "server\zones\waypoints\setupGroupWaypoints.sqf";
			};
			class zoneGroupsFindHideWaypoint {
				file = "server\zones\waypoints\zoneGroupsFindHideWaypoint.sqf";
			};
			class waypointFunctions {
				file = "server\zones\waypoints\waypointFunctions.sqf";
			};

			// loot

			class despawnHouseLoot {
				file = "server\loot\despawnHouseLoot.sqf";
			};
			class generateLoot {
				file = "server\loot\generateLoot.sqf";
			};
			class spawnHouseLoot {
				file = "server\loot\spawnHouseLoot.sqf";
			};

			// player actions

			class serverCasAttackRun {
				file = "server\actions\serverCasAttackRun.sqf";
			};
			class placeItemInFire {
				file = "server\actions\placeItemInFire.sqf";
			};
			class serverHideBody {
				file = "server\actions\serverHideBody.sqf";
			};

			// persistence

			class serverHandleScore {
				file = "server\persistence\serverHandleScore.sqf";
			};
			class serverPlayerConfirmKills {
				file = "server\persistence\serverPlayerConfirmKills.sqf";
			};
			class serverPlayerLogOut {
				file = "server\persistence\serverPlayerLogOut.sqf";
			};
			class serverShutdown {
				file = "server\persistence\serverShutdown.sqf";
			};

			// Tasks (catch all for now)

			class objectsMapper {
				file = "server\government\compositions\objectsMapper.sqf";
			};

			// radio

			class serverConfirmJoinGroup {
				file = "server\radio\serverConfirmJoinGroup.sqf";
			};
			class serverConfirmLeaveGroup {
				file = "server\radio\serverConfirmLeaveGroup.sqf";
			};

			// renegades

			class findRenWaypoints {
				file = "server\renegades\findRenWaypoints.sqf";
			};
			class renWaypointComplete {
				file = "server\renegades\renWaypointComplete.sqf";
			};
			class renWaypointCompleteBoat {
				file = "server\renegades\renWaypointCompleteBoat.sqf";
			};
			class renWaypointCompleteCar {
				file = "server\renegades\renWaypointCompleteCar.sqf";
			};
			class setRenegadeBoatWPs {
				file = "server\renegades\setRenegadeBoatWPs.sqf";
			};
			class setRenegadeCarWPs {
				file = "server\renegades\setRenegadeCarWPs.sqf";
			};

			// tents

			class tentKilled {
				file = "server\tents\tentKilled.sqf";
			};
			class serverSetTentOwner {
				file = "server\tents\serverSetTentOwner.sqf";
			};

			// tasks
			class encrypt {
				file = "server\tasks\encrypt.sqf";
			};
			class checkAirBaseTaskComplete {
				file = "server\tasks\checkAirBaseTaskComplete.sqf";
			};
			class checkArtilleryTaskComplete {
				file = "server\tasks\checkArtilleryTaskComplete.sqf";
			};
			class checkRadioTransTaskComplete {
				file = "server\tasks\checkRadioTransTaskComplete.sqf";
			};
			class setupAirbases {
				file = "server\tasks\setupAirbases.sqf";
			};
			class setupArtillery {
				file = "server\tasks\setupArtillery.sqf";
			};
			class sideMissionDestroyAA {
				file = "server\tasks\sideMissions\objectives\sideMissionDestroyAA.sqf";
			};
			class sideMissionManager {
				file = "server\tasks\sideMissions\sideMissionManager.sqf";
			};


			// wrecks

			class fillCrate {
				file = "server\wrecks\fillCrate.sqf";
			};
		};
	};
};

// temp sounds here

class CfgSounds {
	#include "vip_lit\resource\vip_lit_cfgSounds.hpp"
};

#include "cfgLoot\CfgLootTypes.cpp"
class CfgLoot {
	#include "cfgLoot\types\residential.cpp"
	#include "cfgLoot\types\church.cpp"
	#include "cfgLoot\types\industrial.cpp"
	#include "cfgLoot\types\medical.cpp"
	#include "cfgLoot\types\military.cpp"
	#include "cfgLoot\types\shop.cpp"
};

class CfgNotifications {
	class Default {
		title = ""; // Tile displayed as text on black background. Filled by arguments.
		iconPicture = ""; // Small icon displayed in left part. Colored by "color", filled by arguments.
		iconText = ""; // Short text displayed over the icon. Colored by "color", filled by arguments.
		description = ""; // Brief description displayed as structured text. Colored by "color", filled by arguments.
		color[] = {1,1,1,1}; // Icon and text color
		duration = 3; // How many seconds will the notification be displayed
		priority = 0; // Priority; higher number = more important; tasks in queue are selected by priority
		difficulty[] = {}; // Required difficulty settings. All listed difficulties has to be enabled
	};
	class DenyEject {
		title = "DENIED";
		iconPicture = "\a3\ui_f\data\gui\cfg\debriefing\endDefault_ca.paa";
		description = "%1";
		priority = 7;
	};
};
// ONLY NEED TO PUT FUNCTIONS/COMMANDS SENT FROM CLIENT IN HERE
// State of remoteExec: 0 = off, 1 = only whitelisted, 2 = on
// 0 = can target anyone
// 1 = can target only clients
// 2 = can target only the server
class CfgRemoteExec {
	class Functions {
		mode = 1;
		jip = 1; // Ability to send jip messages: 0-disabled, 1-enabled

		// bis client network functions

		class BIS_fnc_effectKilledAirDestruction {
			allowedTargets = 0;
		};
		class BIS_fnc_effectKilledSecondaries {
			allowedTargets = 0;
		};
		class BIS_fnc_objectVar {
			allowedTargets = 0;
		};
		class BIS_fnc_debugConsoleExec {
			allowedTargets = 0;
		};
		class bis_fnc_settasklocal {
			allowedTargets = 0; // not sure where this goes yet
		};

		// nocebo client network functions

		class horde_fnc_placeItemInFire {
			allowedTargets = 2;
		};
		class horde_fnc_serverCasAttackRun {
			allowedTargets = 2;
		};
		class horde_fnc_serverHideBody {
			allowedTargets = 2;
		};
		class horde_fnc_addServerEventHandler {
			allowedTargets = 2;
		};
		class horde_fnc_setAndShareVariableWithServer {
			allowedTargets = 2;
		};
		class horde_fnc_initPlayerOnServer {
			allowedTargets = 2;
		};
		class horde_fnc_switchMoveGlobal {
			allowedTargets = 0;
		};
		class horde_fnc_displayActionRejMessage {
			allowedTargets = 1;
		};
		class horde_fnc_playSingleSound {
			allowedTargets = 1;
		};
		class horde_fnc_deletePlayerTimeout {
			allowedTargets = 2;
		};
		class horde_fnc_serverAddToGarbage {
			allowedTargets = 2;
		};
		class horde_fnc_opBandage {
			allowedTargets = 1;
		};
		class horde_fnc_opMedigel {
			allowedTargets = 1;
		};
		class horde_fnc_opBloodBagComplete {
			allowedTargets = 1;
		};
		class horde_fnc_opFirstAidComplete {
			allowedTargets = 0;
		};
		class horde_fnc_serverConfirmJoinGroup {
			allowedTargets = 2;
		};
		class horde_fnc_serverConfirmLeaveGroup {
			allowedTargets = 2;
		};
		class horde_fnc_displayActionConfMessage {
			allowedTargets = 1;
		};
		class horde_fnc_opRemoveBullets {
			allowedTargets = 1;
		};
		class horde_fnc_opReviveComplete {
			allowedTargets = 1;
		};
		class horde_fnc_serverPlayerConfirmKills {
			allowedTargets = 2;
		};
		class horde_fnc_serverLoadCargo {
			allowedTargets = 2;
		};
		class horde_fnc_serverUnloadCargo {
			allowedTargets = 2;
		};
		class horde_fnc_serverSetTexture {
			allowedTargets = 2;
		};
		class horde_fnc_serverSetTentOwner {
			allowedTargets = 2;
		};
		class horde_fnc_playerReceiveInvite {
			allowedTargets = 1;
		};
		class horde_fnc_casAddPlayerRemoteControl {
			allowedTargets = 1;
		};
		class horde_fnc_playerRequestSimAndHide {
			allowedTargets = 0;
		};
		class horde_fnc_addMagazineGlobal {
			allowedTargets = 0;
		};
		class horde_fnc_addMagazineTurretGlobal {
			allowedTargets = 2;
		};
		class horde_fnc_addWeaponGlobal {
			allowedTargets = 0;
		};
		class horde_fnc_allowDamageGlobal {
			allowedTargets = 0;
		};
		class horde_fnc_deleteGroupGlobal {
			allowedTargets = 2;
		};
		class horde_fnc_enableSimulationGlobal {
			allowedTargets = 2;
		};
		class horde_fnc_joinSilentGlobal {
			allowedTargets = 2;
		};
		class horde_fnc_lockCargoGlobal {
			allowedTargets = 0;
		};
		class horde_fnc_playMoveNowGlobal {
			allowedTargets = 0;
		};
		class horde_fnc_removeMagazineTurretGlobal {
			allowedTargets = 2;
		};
		class horde_fnc_setAmmoGlobal {
			allowedTargets = 0;
		};
		class horde_fnc_setFlagTextureGlobal {
			allowedTargets = 0;
		};
		class horde_fnc_setFuelGlobal {
			allowedTargets = 0;
		};
		class horde_fnc_setHitPointDamageGlobal {
			allowedTargets = 0;
		};
		class horde_fnc_setUnitRatingGlobal {
			allowedTargets = 0;
		};
		class horde_fnc_setVectorDirAndUpGlobal {
			allowedTargets = 0;
		};
		class horde_fnc_setVehicleAmmoGlobal {
			allowedTargets = 0;
		};
		class horde_fnc_setVelocityGlobal {
			allowedTargets = 0;
		};
		class horde_fnc_getPlayerDetails {
			allowedTargets = 2;
		};
		class horde_fnc_timedParticleEffect {
			allowedTargets = 1;
		};
		class horde_fnc_vehDamageParticleEffects {
			allowedTargets = 1;
		};
		class horde_fnc_reloadMenuUpdateVehMags {
			allowedTargets = 1;
		};
		class horde_fnc_reloadMenuAddMagazinesTurret {
			allowedTargets = 2;
		};
		class horde_fnc_reloadMenuRemoveMagazinesTurret {
			allowedTargets = 2;
		};
		class horde_fnc_reloadMenuUpdateMagazinesTurret {
			allowedTargets = 2;
		};
		class horde_fnc_casRemoteControlServer {
			allowedTargets = 2;
		};
		class horde_fnc_selectLeaderGlobal {
			allowedTargets = 2;
		};
		class horde_fnc_serverShutDown {
			allowedTargets = 2;
		};
		class horde_fnc_serverPlayerLogOut {
			allowedTargets = 2;
		};
		class horde_fnc_vehicleKilled {
			allowedTargets = 2;
		};
		class horde_fnc_tentKilled {
			allowedTargets = 2;
		};
		class horde_fnc_playerDownIcon {
			allowedTargets = 1; // maybe 1
		};
	};
	class Commands {
		class deleteGroup {
			allowedTargets = 0;
			jip = 0;
		};
		class hint {
			allowedTargets = 0;
			jip = 0;
		};
		class setFlagTexture {
			allowedTargets = 0;
			jip = 0;
		};
		class setVectorDirAndUp {
			allowedTargets = 0;
			jip = 0;
		};
		class setFuel {
			allowedTargets = 0;
			jip = 0;
		};
		class setHitPointDamage {
			allowedTargets = 0;
			jip = 0;
		};
		class setVelocity {
			allowedTargets = 0;
			jip = 0;
		};
		class selectLeader {
			allowedTargets = 0;
			jip = 0;
		};
		class switchMove {
			allowedTargets = 0;
			jip = 0;
		};
		class enableChannel {
			allowedTargets = 0;
			jip = 0;
		};
		class setVehicleAmmo {
			allowedTargets = 0;
			jip = 0;
		};
	};
};

// !"^Land_(PainKillers|VitaminBottle|WaterPurificationTablets|PowderedMilk)_F$"